1        package DMPK_CORE_2 AUTHID CURRENT_USER as
2        
3        
4        	/****************************************************		INFORMAZIONI GENERALI		***********************************************************/
5        	/************** Argomenti delle stored per il controllo della transazione:																	*******/
6        	/************** FlgRollBckFullIn -> se 1 in caso di errore viene fatta la rollback completa (non a savepoint), 								*******/
7        	/************** 				altrimenti la rollback delle sole modifiche effettuate nella stored											*******/
8        	/************** 				ATTENZIONE: la rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log						*******/
9        	/************** FlgAutoCommitIn  -> se vale 1, dopo la rollback e qualunque sia l'esito (positivo o no), la stored esegue una commit finale *******/
10        	/************** Tutte le funzioni/procedure che NON hanno gli argomenti in input FlgRollBckFullIn e FlgAutoCommitIn 						*******/
11        	/************** NON ESEGUONO AL LORO INTERNO ALCUNA COMMIT nè ROLLBACK 																		*******/
12        
13        	/************** Tutte le funzioni, tranne quelle da utilizzarsi nelle select, restituiscono 1 in caso di successo, altrimenti 0				*******/
14        	/************** Tali funzioni restituiscono, in caso di result 0, un n.ro, un contesto e un messaggio di errore:							*******/
15        	/************** il n.ro è: <0 se errore ORACLE non specificamente gestito 																	*******/
16        	/**************		   da 1->1000 errore "grave" (SEVERE_ERROR) gestito																		*******/
17        	/**************		   >1000 errore non grave gestito																						*******/
18        	/************** il contesto indica il package e/o funzione/procedura in cui si è verificato l'errore										*******/
19        
20        
21        	----- funzione per ricercare i documenti inviati nella coda di firma massiva (libro firma)
22        	function TrovaDocInLibroFirma(
23        			CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
24        																										-- (obblig). Codice identificativo del token di connessione
25        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,					-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
26        			FiltriIO					IN OUT	NOCOPY CLOB,											-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd).
27        																										-- Ogni filtro è un tag "Variabile" dell'XML
28        																										-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
29        																										-- I nomi dei filtri possibili sono:
30        																										-- firmatario (obblig): nominativo firmatario. Ricerca esatta
31        																										-- InviatiInFirmaDal: estremo inferiore dell'intervallo di ricerca sulla data di invio in firma (nel formato del parametro FMT_STD_DATA)
32        																										-- InviatiInFirmaAl: estremo superiore dell'intervallo di ricerca sulla data di invio in firma (nel formato del parametro FMT_STD_DATA)
33        																										-- ListaIdTipiDoc: lista con gli id. del/dei tipi documenti da filtrare (separati da , o ;)
34        			------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
35        			ColOrderByIO				IN OUT	VARCHAR2,												-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare per tutte le colonne). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
36        																										-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
37        																										-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
38        			FlgDescOrderByIO  			IN OUT	VARCHAR2,												-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
39        																										-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
40        			FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            					-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
41        			NroPaginaIO      			IN OUT	PLS_INTEGER,                  							-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
42        			BachSizeIO					IN OUT	PLS_INTEGER,											-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
43        																										-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
44        			OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,								-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
45        			FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
46        			NroTotRecOut				OUT		PLS_INTEGER,											-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
47        			NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     						-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
48        			FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
49        																										-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema.
50        			------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
51        			ResultOut					OUT		NOCOPY CLOB, 											-- Lista delle richieste trovate (XML conforme a schema LISTA_STD.xsd)
52        																										-- Ogni record di richiesta è un tag Riga che può contenere le seguenti colonne:
53        																										-- 1: ID_DOC del documento
54        																										-- 2: Nro versione file da firmare
55        																										-- 3: Display filename del file da firmare
56        																										-- 4: N.ro provvisorio dell'UD cui appartiene il documento da firmare (alfanumerico)
57        																										-- 5: N.ro definitivo dell'UD cui appartiene il documento da firmare (alfanumerico)
58        																										-- 6: Tipo del documento da firmare
59        																										-- 7: URI del file da firmare
60        																										-- 8: Mimetype del file da firmare
61        																										-- 9:(valori 1/0) Flag di file pdf o in formato convertibile in pdf
62        																										-- 10:(valori 1/0) Indica se il file da firmare è già firmato (1) o meno
63        																										-- 11: Data e ora di invio alla firma (nel formato dato dal parametro FMT_STD_TIMESTAMP)
64        																										-- 12: Utente che ha inviato in firma (o indicazione se invio automatico)
65        																										-- 13:ID_UD dell'unità documentaria a cui appartiene il documento da firmare
66        																										-- 14: ID_PROCESS dell'eventuale processo in cui viene lavorata l'UD cui appartiene il documento da firmare
67        																										-- 15: Nome del passo di processo che verrà completato in automatico apponendo la firma
68        			ErrContextOut				OUT		VARCHAR2,												-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
69        			ErrCodeOut					OUT		PLS_INTEGER,											-- N.ro errore di uscita
70        			ErrMsgOut					OUT 	VARCHAR2)												-- Messaggio d'errore
71        			return PLS_INTEGER;																			-- Vale 1 se tutto è andato a buon fine, altrimenti 0
72        
73        	----- funzione per apporre o rifiutare la firma su uno o più documenti in libro firma
74        	----- in caso di errore su una singolo documento l'elaborazione NON si interrompe e procede con il successivo.
75        	----- su ogni documento elaborato viene subito fatta la commit se richiesta
76        	function FirmaSuDocInLibroFirma(
77        			CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,			-- (obblig). Codice identificativo del token di connessione
78        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,					-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
79        			AzioneIn					IN		VARCHAR2,												-- Azione da effettuare (obblig). Valori ammessi: firma, rifiuto_firma
80        			FirmatarioIn				IN		VARCHAR2,												-- Firmatario (obblig.) che accetta o rifiuta la firma
81        			DocInfoIn					IN		CLOB,													-- Lista XML Standard con le informazioni dei documenti su cui effettuare la firma o rifiuto della firma
82        																										-- Ogni riga-documento da firmare contiene le colonne:
83        																										-- 1: ID_DOC
84        																										-- 2: URI del file firmato
85        																										-- 3: Tipo di firma apposta: CAdES o PAdES o XAdES
86        			EsitiOut					OUT		NOCOPY CLOB,											-- Lista XML con esiti dell'operazione sui singoli oggetti:
87        																										-- Contiene le colonne
88        																										-- 1: ID_DOC
89        																										-- 2: Nro versione file firmato
90        																										-- 3: Estremi del documento da mostare a GUI
91        																										-- 4: Esito OK o KO
92        																										-- 5: Codice e Messaggio di errore
93        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
94        																										-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
95        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
96        			ErrContextOut				OUT		VARCHAR2,												-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
97        			ErrCodeOut					OUT		PLS_INTEGER,											-- N.ro errore di uscita
98        			ErrMsgOut					OUT 	VARCHAR2)												-- Messaggio d'errore
99        			return PLS_INTEGER;																			-- Vale 1 se non ci sono stati errori generali (vale a dire NON sul singolo documento), altrimenti 0
100        
101        
102        	----- funziona per inviare o rimuovere dal libro firma documenti
103        	----- in caso di errore su una singolo documento l'elaborazione NON si interrompe e procede con il successivo.
104        	----- su ogni documento elaborato viene subito fatta la commit se richiesta
105        	function InviaRimuoviDocLibroFirma(
106        			CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,			-- (obblig). Codice identificativo del token di connessione
107        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,					-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
108        			AzioneIn					IN		VARCHAR2,												-- Azione da effettuare (obblig). Valori ammessi: invio, rimuovi
109        			FirmatarioIn				IN		VARCHAR2 DEFAULT NULL,									-- Firmatario (obblig. se per i documenti da firmare non si passa l'id. processo) alla/dalla cui firma inviare/togliere i documenti
110        			DocInfoIn					IN		CLOB,													-- Lista XML Standard con le informazioni dei documenti da inviare/rimuovere al/dal libro firma
111        																										-- Ogni riga-documento da firmare contiene le colonne:
112        																										-- 1: ID_UD (obblig)
113        																										-- 2: ID del tipo documento da firmare
114        																										-- 3: ID_PROCESS del processo eventuale in cui è lavorata l'UD e dal quale si richiama l'azione di invio/rimozione dal libro firma
115        			EsitiOut					OUT		NOCOPY CLOB,											-- Lista XML con esiti dell'operazione sui singoli oggetti:
116        																										-- Contiene le colonne
117        																										-- 1: ID_UD
118        																										-- 2: ID_PROCESS
119        																										-- 3: Estremi del documento da mostare a GUI
120        																										-- 4: Esito OK o KO
121        																										-- 5: Codice e Messaggio di errore
122        																										-- 6: ID_DOC del documento inviato/tolto dal libro firma
123        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
124        																										-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
125        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,								-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
126        			ErrContextOut				OUT		VARCHAR2,												-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
127        			ErrCodeOut					OUT		PLS_INTEGER,											-- N.ro errore di uscita
128        			ErrMsgOut					OUT 	VARCHAR2)												-- Messaggio d'errore
129        			return PLS_INTEGER;																			-- Vale 1 se non ci sono stati errori generali (vale a dire NON sul singolo documento), altrimenti 0
130        
131        
132        end DMPK_CORE_2;