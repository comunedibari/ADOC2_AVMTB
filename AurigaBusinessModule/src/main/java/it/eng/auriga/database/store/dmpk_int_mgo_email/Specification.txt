1        PACKAGE DMPK_INT_MGO_EMAIL AUTHID CURRENT_USER IS
2        
3        	/**** funzione che a fronte dell'id. utente di Auriga restituisce il corrispondente id utente sul modulo gestione ordinaria e-mail *****/
4        	function GetIdUtenteMGOEmail(
5        			IdUserIn					IN	DMT_USERS.ID_USER%type,					-- Id. dell'utente Auriga
6        			IdUtentePECOut				OUT	VARCHAR2								-- Id. dell'utente sul modulo gestione ordinaria e-mail se presente
7        			)
8        			return PLS_INTEGER;														-- Restituisce sempre 1
9        
10        	/******* serve per ricavare se utente loggato/di lavoro è abilitato all'invio da una certa casella					**********/
11        	function CtrlUtenzaAbilitataInvio(
12        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
13        																					-- (obblig). Codice identificativo del token di connessione
14        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
15        			AccountMittenteIn			IN		VARCHAR2,							-- (obblig.) Indirizzo della casella da cui si deve inviare (ricerca case-insensitive)
16        			FlgAbilInvioOut				OUT		PLS_INTEGER,						-- Indica se l'utente loggato/di lavoro è abilitato (1) o meno (0) all'invio
17        			IdUserOut					Out		INTEGER,							-- IdUser dell'utente loggato/di lavoro (PK di DMT_USERS)
18        			IdUtentePECOut				OUT		VARCHAR2,							-- Id. dell'utente loggato/di lavoro sul modulo gestione ordinaria e-mail se presente (PK di T_UTENTI_MOD_PEC)
19        			IdAccountOut				OUT		VARCHAR2,							-- Identificativo (PK) della casella da cui si deve inviare
20        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
21        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
22        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
23        			return PLS_INTEGER;														-- 1 in caso di verifica effettuata senza errori, 0 in caso di errore
24        
25        	/******* serve a precompilare i dati della maschera di registrazione di una e-mail ricevuta il cui id. è in input					**********/
26        	/******* i dati della registrazione sono restituiti come XML secondo schema SezioneCache.xsd.										**********/
27        	function PreparaRegEmailRicevuta(
28        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
29        																					-- (obblig). Codice identificativo del token di connessione
30        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
31        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
32        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- Segnatura.xml allegata alla mail se trattasi di e-mail interoperabile
33        			XMLDatiUDOut				OUT		NOCOPY CLOB,						-- Dati da preimpostare nella maschera di registrazione (XML conforme a schema SezioneCache.xsd)
34        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
35        																					-- ##############TODO
36        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
37        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
38        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
39        			FinalitaIn					In		VARCHAR2 DEFAULT NULL)				-- Finalità dell'UD o della mail
40        																					-- Valori ammessi: VISURA_SUE
41        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
42        
43        	/******* serve a verificare e effettuare, se possibile, la protocollazione/repertoriazione automatica di una e-mail ricevuta il cui id. è in input		**********/
44        	/******* i dati della registrazione sono restituiti come XML secondo schema SezioneCache.xsd.															**********/
45        	/*function RegAutoEmailRicevuta(
46        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
47        																					-- (obblig). Codice identificativo del token di connessione
48        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
49        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
50        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- Segnatura.xml allegata alla mail se trattasi di e-mail interoperabile
51        			XMLAllegatiMailIn
52        			XMLDatiUDOut				OUT		NOCOPY CLOB,						-- Dati da preimpostare nella maschera di registrazione (XML conforme a schema SezioneCache.xsd)
53        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
54        																					-- ##############TODO
55        			XMLConfermaOut				OUT		NOCOPY CLOB,
56        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
57        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
58        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
59        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
60        	*/
61        
62        	/******* serve a precompilare i dati della maschera di invio via e-mail di una registrazione/unità documentaria il cui id. è in input	**********/
63        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.										**********/
64        	function PreparaInvioUDXEmail(
65        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
66        																					-- (obblig). Codice identificativo del token di connessione
67        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
68        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
69        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/2/NULL) Se 1 indica che l'invio richiesto è tramite PEC e maschera di interoperabilità, se 0 o NULL tramite PEC o posta elettronica ordinaria (senza Segnatura.xml), se 2 che si tratta di un'invio interoperabile ma usando la maschera di invio delle non inter
70        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
71        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
72        																					-- ##############TODO
73        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
74        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
75        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
76        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la finalità per cui si richiede l'invio
77        																					-- Valori possibili: INVIO_COLLEGIO_SINDACALE,  #RICH_INVIO# + Id. richiesta della T_UD_TO_SEND
78        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
79        
80        	/******* serve a precompilare i dati della maschera di invio via e-mail della ricevuta di registrazione unità documentaria il cui id. è in input	**********/
81        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.													**********/
82        	function PreparaInvioRicevutaRegXEmail(
83        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
84        																					-- (obblig). Codice identificativo del token di connessione
85        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
86        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
87        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/NULL) Se 1 indica che l'invio richiesto è tramite PEC, se 0 o NULL tramite posta elettronica ordinaria
88        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
89        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
90        																					-- ##############TODO
91        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
92        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
93        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
94        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la finalità per cui si richiede l'invio
95        																					-- Valori possibili: INVIO_COLLEGIO_SINDACALE
96        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
97        	/******* serve a precompilare i dati della maschera di invio via e-mail di una fattura il cui id. UD è in input	**********/
98        	/******* i dati per la mail da inviare sono restituiti come XML secondo schema SezioneCache.xsd.				**********/
99        	function PreparaInvioFatturaXEmail(
100        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
101        																					-- (obblig). Codice identificativo del token di connessione
102        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
103        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
104        			FlgInvioPECIn				IN		PLS_INTEGER DEFAULT 1,				-- (valori 1/0/NULL) Se 1 indica che l'invio richiesto è tramite PEC, se 0 o NULL tramite posta elettronica ordinaria
105        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail (XML conforme a schema SezioneCache.xsd)
106        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
107        																					-- ##############TODO
108        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
109        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
110        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
111        			FinalitaIn					IN		VARCHAR2 DEFAULT NULL,				-- Indica la finalità per cui si richiede l'invio
112        																					-- Valori possibili: REINVIO_DA_GUI
113        			LinguaIn					IN		VARCHAR2 DEFAULT NULL)				-- Indica la lingua in cui deve essere composta la mail (codice; se non specificato si intende it = Italiano)
114        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
115        
116        	---- funzione da chiamare prima dell'invio PEC di un documento per aggiungere/aggiornare in rubrica e-mail, corredati di denominazione e eventuale id. della rubrica corrispondenti,
117        	---- i destinatari della mail specificati a GUI che non risultassero presenti in rubrica e-mail o con dati NON completi (es con nome = account)
118        	function AggDestInvioInRubricaEmail(
119        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
120        																					-- (obblig). Codice identificativo del token di connessione
121        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
122        			IdUDIn   					IN    	DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo dell'unità documentaria (registrata o meno a protocollo) da inviare via e-mail
123        			XMLDestInvioMailIn			IN		CLOB,								-- (obblig.) Lista dei destinatari dell'invio (XML conforme a schema LISTA_STD.xsd)
124        																					-- Ogni destinatario è un record; gli attributi previsti nella vari tag Colonna sono:
125        																					-- 4: Id. del destinatario in rubrica corrispondenti (se vi è presente)
126        																					-- 5: Denominazione/cognome e nome del destinatario
127        																					-- 8: Account - i.e. indirizzo e-mail - del destinatario
128        																					-- Le altre colonne al momento NON sono utilizzate
129        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
130        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
131        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
132        			ErrContextOut				OUT		VARCHAR2,							-- Indica la sezione di programma o funzione chiamata in cui si è verificato un errore
133        			ErrCodeOut					OUT		PLS_INTEGER,						-- Codice di eventuale errore verificatosi
134        			ErrMsgOut					OUT		VARCHAR2)							-- Messaggio di eventuale errore verificatosi
135        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
136        
137        	/*********** funzione per generare la Segnatura.xml per inviare via e-mail una registrazione/unità documentaria *********/
138        	function GeneraSegnaturaXML(
139        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
140        																					-- (obblig). Codice identificativo del token di connessione
141        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
142        			IdUDIn						IN		DMT_UNITA_DOC.ID_UD%type,			-- (obblig.) Identificativo della registrazione/unità documentaria per cui generare la Segnatura.xml
143        			VersioneDTDIn				IN		VARCHAR2,							-- (obblig.) Versione del DTD/xsd della segnatura da utilizzare per generare l'xml Segnatura.xml
144        			XMLDatiInvioMailIn			IN		CLOB,								-- (obblig.) Dati presenti nella maschera di invio e-mail della registrazione (XML conforme a schema SezioneCache.xsd)
145        																					-- I dati specificabili corrispondono ai seguenti tag Variabile:
146        																					-- ##############TODO: ci sono la lista destinatari e RichiestaConferma (true/false)
147        			XMLSegnaturaOut				OUT		NOCOPY CLOB,						-- Segnatura.xml
148        			ErrContextOut				OUT		VARCHAR2,							-- Indica la sezione di programma o funzione chiamata in cui si è verificato un errore
149        			ErrCodeOut					OUT		PLS_INTEGER,						-- Codice di eventuale errore verificatosi
150        			ErrMsgOut					OUT		VARCHAR2)							-- Messaggio di eventuale errore verificatosi
151        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
152        
153        	/**** serve a ottenere i dati ed eventualmente l'attach xml - Conferma.xml, Eccezione.xml ecc - per una e-mail di notifica (Conferma, Eccezione, Aggiornamento, Annullamento) da inviare ****/
154        	function PreparaInvioNotifica(
155        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
156        																					-- (obblig). Codice identificativo del token di connessione
157        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
158        			TipoNotificaIn				IN		VARCHAR2,							-- (obblig.) Indica il tipo di mail di notifica da inviare
159        																					-- Valori ammessi:
160        																						 -- conferma
161        																						 -- aggiornamento
162        																						 -- eccezione
163        																						 -- annullamento
164        			IdEmailIn					IN 		VARCHAR2,							-- (obblig. tranne che per le notifiche per cui si sia indicato IdUDIn) Identificativo univoco con cui è salvata sul modulo gestione ordinaria e-mail la mail in entrata per cui inviare notifica di conferma, eccezione ecc
165        			IdUDIn						IN 		DMT_UNITA_DOC.ID_UD%type,			-- (obblig. se IdEmailIn non è valorizzato) Identificativo della registrazione (i.e. unità documentaria) in entrata cui si riferisce la notifica (registrazione relativa ad una mail in entrata)
166        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					-- (obblig. se FlgNoAttachXMLIn diverso da 1) Segnatura.xml allegata alla mail IdEmailIn se trattasi di e-mail interoperabile
167        			FlgNoAttachXMLIn			IN		PLS_INTEGER DEFAULT NULL,			-- Se 1 NON viene calcolato nè restituito l'xml - Conferma.xml, Eccezione.xml, Aggiornamento.xml, Annullamento.xml - da allegare alla mail di notifica, se 0 o NULL l'xml viene generato e restituito in XMLAttachOut
168        			VersioneDTDIn				IN		VARCHAR2 DEFAULT NULL,				-- (NON UTILIZZATA) Versione del DTD/xsd della segnatura da utilizzare per generare l'xml interoperabile
169        			XMLDatiInvioMailOut			OUT		NOCOPY CLOB,						-- Dati da preimpostare/utilizzare nella maschera di invio e-mail di notifica (XML conforme a schema SezioneCache.xsd)
170        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
171        																					-- ##############TODO
172        
173        			XMLAttachOut				OUT	NOCOPY CLOB,							-- XML di conferma, eccezione, aggiornamento, annullamento da allegare alla mail di notifica (valorizzato solo se FlgNoAttachXMLIn non è 1)
174        			NomeXMLAttachOut			OUT		VARCHAR2,							-- Nome dell'attachment xml da allegare alla mail di notifica
175        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
176        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
177        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
178        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
179        
180        	/**** serve a ottenere i dati e l'eventuale attach conferma.xml per un'e-mail di notifica conferma da inviare in automatico a fronte della protocollazione di una data mail ricevuta****/
181        	function PreparaConfermaAutomatica(
182        			IdUtentePECIn				IN		VARCHAR2,							-- (obblig.) Id. dell'utente - id. nel modulo gestione ordinaria e-mail - che ha effettuato la registrazione a fronte della quale si scatena l'invio autoimatico della mail di conferma
183        			IdEmailIn					IN 		VARCHAR2,							-- (obblig.) Identificativo univoco con cui è salvata sul modulo gestione ordinaria e-mail la mail in entrata per cui inviare notifica di conferma
184        			IdUDIn						IN 		DMT_UNITA_DOC.ID_UD%type,			-- (obblig. se IdEmailIn non è valorizzato o se a fronte della mail in entrata vi sono più registrazioni) Identificativo della registrazione (i.e. unità documentaria) in entrata che dà luogo alla notifica utomatica di conferma
185        			XMLSegnaturaIn				IN		CLOB DEFAULT NULL,					--  Segnatura.xml allegata alla mail IdEmailIn se trattasi di e-mail interoperabile
186        			VersioneDTDIn				IN		VARCHAR2 DEFAULT NULL,				-- (NON UTILIZZATA) Versione del DTD/xsd da utilizzare per generare il conferma.xml
187        			DestinatariMailNotifOut		OUT		VARCHAR2,							-- Indirizzi e-mail destinatari principali della mail di notifica conferma (se più di uno separati da ;)
188        			DestinatariCCMailNotifOut	OUT		VARCHAR2,							-- Indirizzi e-mail destinatari in conoscenza della mail di notifica conferma (se più di uno separati da ;)
189        			SubjectMailNotifOut			OUT		VARCHAR2,							-- Oggetto della mail di notifica conferma
190        			BodyMailNotifOut			OUT		VARCHAR2,							-- Testo/corpo della mail di notifica conferma
191        			FlgRicevutaCBSOut			OUT		VARCHAR2,							-- Indica se per la mail di notifica conferma è richiesta ricevuta: C = Completa, B = Breve, S = Sintetica
192        			XMLConfermaOut				OUT		NOCOPY CLOB,						-- XML di conferma (conferma.xml) da allegare alla mail di notifica (se nullo significa che non vi è alcun attach da allegare alla mail)
193        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
194        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
195        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
196        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
197        
198        	/******* restituisce lo stato di protocollazione - parziale o completa - di una e-mail in entrata *********/
199        	function GetStatoProtEmail(
200        		IdEmailIn					IN 		VARCHAR2,							-- (obblig.) Identificativo univoco dell'e-mail in entrata
201        		FlgStatoProtOut				OUT		VARCHAR2,							-- Stato di protocollazione dell'email.
202        																				-- P= Parziale (sono stati protocollati solo alcuni degli allegati dell'e-mail); C = Completa (tutti gli allegati/parti dell'e-mail sono stati protocollati); NULL = non ancora protocollata
203        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
204        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
205        		ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
206        		return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
207        
208        	/****** funzione per ottenere l'indicazione se l'utente loggato o quello per cui si sta lavorando può ricevere o inviare via e-mail 			******/
209        	/****** distinguendo tra caselle di posta elettronica ordinaria e caselle PEC																	******/
210        	function GetAbilInvioRicezione(
211        			CodIdConnectionTokenIn	IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
212        																	-- (obblig). Codice identificativo del token di connessione
213        			IdUserLavoroIn			IN		DMT_USERS.ID_USER%type DEFAULT NULL,
214        																	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
215        			FlgAbilRicezionePECOut	OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può ricevere da qualche casella PEC
216        			FlgAbilRicezionePEOOut  OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può ricevere da qualche casella di posta ordinaria
217        			FlgAbilInvioPECOut		OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare da qualche casella PEC
218        			FlgAbilInvioPEOOut		OUT		PLS_INTEGER,			-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare da qualche casella di posta ordinaria
219        			ErrContextOut			OUT		VARCHAR2,				-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
220        			ErrCodeOut				OUT		PLS_INTEGER,			-- N.ro errore di uscita
221        			ErrMsgOut				OUT 	VARCHAR2				-- Messaggio d'errore
222        			) return PLS_INTEGER;									-- Vale 1 se tutto è andato a buon fine, altrimenti 0
223        
224        	/**** serve a conoscere se l'utente - loggato o di lavoro - può effettuare o meno le azioni di protocollazione e/o invio di notifiche interoperabili (Conferma, Eccezione, Aggiornamento, Annullamento) su una data e-mail ****/
225        	function GetAbilAzioniInterop(
226        			CodIdConnectionTokenIn			IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
227        																		-- (obblig). Codice identificativo del token di connessione
228        			IdUserLavoroIn					IN		DMT_USERS.ID_USER%type DEFAULT NULL,
229        																		-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
230        			IdEmailIn						IN		VARCHAR2,			-- (Obblig.) identificativo dell'e-mail
231        			FlgAbilProtEntrataOut			OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può protocollare in entrata la mail
232        			FlgAbilInvioEccezioneOut		OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di eccezione
233        			FlgAbilInvioConfermaOut			OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Conferma
234        			FlgAbilInvioAggiornamentoOut	OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Aggiornamento
235        			FlgAbilInvioAnnullamentoOut		OUT		PLS_INTEGER,		-- (valori 1/0) Indica se l'utente loggato/di lavoro può inviare notifica di Annullamento
236        			ErrContextOut					OUT		VARCHAR2,			-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
237        			ErrCodeOut						OUT		PLS_INTEGER,		-- N.ro errore di uscita
238        			ErrMsgOut						OUT 	VARCHAR2			-- Messaggio d'errore
239        			) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
240        
241        	----------------restituisce informazioni di sintesi sulle e-mail archiviate (arrivate) e inviate dal modulo gestione ordinaria email da cui e a cui abbia dato luogo una data unità documentaria in input
242        	function GetRelEmailVsUD(
243        		IdUDIn							IN		DMT_UNITA_DOC.ID_UD%type,
244        																	-- (obblig.) Id. dell'unità documentaria
245        		IdEmailArrivoOut				OUT		VARCHAR2,			-- Id. dell'eventuale e-mail in arrivo che ha dato luogo all'unità documentaria (tipicamente protocollata in entrata)
246        		NroEmailPECInviateOut			OUT		PLS_INTEGER,		-- N.ro di e-mail certificate (PEC) tramite cui il contenuto dell'unità doc. è stato trasmesso (inviate con il modulo gestione ordinaria)
247        		NroEmailPEOInviateOut			OUT		PLS_INTEGER,		-- N.ro di e-mail di posta elettronica cordinaria (PEO) tramite cui il contenuto dell'unità doc. è stato trasmesso (inviate con il modulo gestione ordinaria)
248        		FlgRicevuteNotConfOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di conferma a fronte di una o più e-mail PEC inviate
249        		FlgRicevuteNotEccOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di eccezione a fronte di una o più e-mail PEC inviate
250        		FlgRicevuteNotAggOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di aggiornamento a fronte di una o più e-mail PEC inviate
251        		FlgRicevuteNotAnnOut			OUT		PLS_INTEGER,		-- Se 1 significa che sono arrivate notifiche interoperabili di annullamento registrazione a fronte di una o più e-mail PEC inviate
252        		ErrContextOut					OUT		VARCHAR2,			-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
253        		ErrCodeOut						OUT		PLS_INTEGER,		-- N.ro errore di uscita
254        		ErrMsgOut						OUT 	VARCHAR2			-- Messaggio d'errore
255        		) return PLS_INTEGER;										-- Vale 1 se tutto è andato a buon fine, altrimenti 0
256        
257        	----- serve ad assegnare una mail (tipicamente ricevuta) ad una UO o utente o scrivania
258        	----- se l'assegnazioni già c'è NON viene replicate ma non viene dato errore
259        	function AssegnaEmail(
260        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
261        																					-- (obblig). Codice identificativo del token di connessione
262        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
263        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da assegnare/smistare
264        			AssegnatariXMLIn			IN		CLOB,								-- Lista XML (conforme a schema LISTA_STD.xsd) con il soggetto UO, scrivania o utente - a cui assegnare la mail
265        																					-- Prevede UNA SOLA RIGA in cui l'assegnatario è un tag Riga con le seguenti colonne:
266        																					-- 1: (obblig.) Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
267        																					-- 2: (obblig.) ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
268        																					-- 3: Eventuale messaggio a corredo dell'assegnazione
269        			FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
270        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
271        			FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
272        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
273        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
274        			ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
275        			) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
276        
277        	----- serve ad ri-assegnare una mail (tipicamente ricevuta)
278        	----- annullano l'assegnazione pre-esistente
279        	function RiassegnaEmail(
280        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
281        																				-- (obblig). Codice identificativo del token di connessione
282        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
283        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da assegnare/smistare
284        		AssegnatariXMLIn			IN		CLOB,								-- Lista XML (conforme a schema LISTA_STD.xsd) con il soggetto UO, scrivania o utente - a cui ri-assegnare la mail
285        																				-- Prevede UNA SOLA RIGA in cui l'assegnatario è un tag Riga con le seguenti colonne:
286        																				-- 1: (obblig.) Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
287        																				-- 2: (obblig.) ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
288        																				-- 3: Eventuale messaggio a corredo dell'assegnazione
289        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
290        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
291        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
292        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
293        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
294        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
295        		) return PLS_INTEGER;												-- Vale 1 se tutto è andato a buon fine, altrimenti 0
296        
297        	----- serve ad ottenere i dati delle assegnazioni - ad UO e/o utenti - di una data e-mail in input
298        	function GetAssegnatariEmail(
299        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
300        																				-- (obblig). Codice identificativo del token di connessione
301        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
302        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
303        		AssegnatariXMLOut			OUT		NOCOPY CLOB,						-- Lista XML (conforme a schema LISTA_STD.xsd) con i soggetti - UO e utenti - assegnatari della mail
304        																				-- Ogni assegnatario è un tag Riga e prevede le seguenti colonne:
305        																				-- 1: Tipo dell'assegnatario: UT=Utente; UO=U.O./ufficio; SV = Scrivania utente
306        																				-- 2: ID_USER o ID_UO o ID_SCRIVANIA dell'assegnatario (identificativo dell'utente/UO/scrivania nella banca dati di Auriga, NON in quella del modulo gestione ordinaria email)
307        																				-- 3: Eventuale messaggio a corredo dell'assegnazione
308        																				-- 4: Descrizione dell'assegnatario
309        																				-- 5: Data e ora dell'assegnazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
310        																				-- 6: Id. univoco dell'assegnazione (stringa)
311        																				-- 7: ID_USER su Auriga dell'utente che ha effettuato l'assegnazione
312        																				-- 8: Cognome e nome di chi ha assegnato
313        		NroTotRecOut			OUT		PLS_INTEGER,							-- E' il n.ro di record restituiti nella lista AssegnatariXMLOut
314        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
315        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
316        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
317        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
318        
319        	----- serve ad annullare l'assegnazione di una mail (tipicamente ricevuta) ad un dato soggetto (UO/utente)
320        	----- l'annullamento è possibile solo se la mail non è stata a sua volta riassegnata dall'assegnatario
321        	function AnnullaAssegnazioneEmail(
322        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
323        																				-- (obblig). Codice identificativo del token di connessione
324        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
325        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig. se IdAssEmailToAnnIn non è valorizzato) Identificativo dell'e-mail
326        		IdAssEmailToAnnIn			IN		VARCHAR2,				 			-- (obblig. se IdEmailIn non è valorizzato) Identificativo dell'assegnazione della mail da annullare (se non specificato è l'ultima assegnazione valida della mail)
327        		MotiviIn					IN		VARCHAR2 DEFAULT NULL,				-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
328        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
329        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
330        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
331        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
332        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
333        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
334        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
335        
336        	/********** funzione per predisporre i dati - casella mittente, destinatari, subject e  body - della mail di notifica automatica di assegnazione o invio per conoscenza ********/
337        	function PreparaEmailNotAssInvioCC(
338        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
339        																				-- (obblig). Codice identificativo del token di connessione
340        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
341        		AssInvioCCIn				IN		VARCHAR2,							-- (obblig.) Indica se è una notifica di assegnazione per competenza o di invio per conoscenza.
342        																				-- Valori: assegnazione_competenza, invio_conoscenza
343        		UDFolderXMLIn				IN		CLOB,								-- (obblig.) Lista di unità documentarie o folder o email assegnati/inviati in conoscenza (xml conforme a schema LISTA_STD.xsd)
344        																				-- Ogni tag riga rappresenta un'unità documentaria o folder assegnato/inviato in cc e contiene le seguenti colonne:
345        																				-- 1: tipo: F = Folder, U = Unità documentaria, E = Email
346        																				-- 2: ID_FOLDER o ID_IUD o ID_EMAIL
347        		DestAssInvioCCXMLIn			IN		CLOB,								-- (obblig.) Lista dei soggetti destinatari dell'assegnazione o invio in conoscenza (xml conforme a schema LISTA_STD.xsd)
348        																				-- Ogni destinatario è un tag "Riga" con le seguenti colonne:
349        																				--						1: (obblig.) Indicatore del tipo di destinastario
350        																				--							Valori possibili:
351        																				-- 							UT 	= Utente
352        																				--							SV	= Scrivania virtuale
353        																				--							UO	= Unità organizzativa (vale a dire tutte le scrivanie virtuali ad essa afferenti)
354        																				--							G	= Gruppo
355        																				--							R	= Ruolo amministrativo contestualizzato ovvero i soggetti che hanno un certo ruolo amministrativo (eventualmente rispetto ad una certa UO o un dato livello della struttura organizzativa/tipo di UO o entrambi)
356        																				--						2: Identificativo del destinatario
357        																				--							è un ID_UO di DMT_STRUTTURA_ORG se colonna 1=UO,
358        																				--							è un ID_GRUPPO di DMT_GRUPPI se colonna 1 =G
359        																				--							è un ID_USER di DMT_USERS se colonna 1 =UT
360        																				--							è un ID_SCRIVANIA di DMT_SCRIVANIE_VIRTUALI se colonna 1 =SV
361        																				--							è un ID_RUOLO_AMM di DMT_RUOLI_AMM se colonna 1 =R
362        																				--						3: Denominazione/nome del destinatario (se trattasi di UO può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
363        																				--						4: Identificativo della UO cui appartiene la scrivania destinataria
364        																				--						5: Nri livello della UO destinataria o a cui appartiene la scrivania destinataria (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
365        																				--						6: Denominazione della UO cui appartiene la scrivania destinataria (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
366        																				--						7: Codice che identifica nell'applicazione esterna da cui ci si connette l'utente destinatario o quello che occupa la scrivania destinataria
367        																				--						8: Denominazione dell'utente che occupa la scrivania destinataria
368        																				--						9: (valore 1) Indica che il destinatario, se UO, sono anche tutte le sue sotto-UO
369        																				--						10: (valori interi da 1 a n) Livello della struttura organizzativa in cui si espleta il ruolo amministrativo destinatario
370        																				--						11: Se colonna 1 =R: Codice del tipo di unità organizzativa in cui si espleta il ruolo amministrativo destinatario (alternativo alla colonna 10)
371        																				--						    Se colonna 1 =UT o SV: Username (delle credenziali locali) dell'utente destinatario o che occupa la scrivania destinataria
372        																				--						12: Se colonna 1 =R: Descrizione del tipo di unità organizzativa (es: settore, servizio, ecc) in cui si espleta il ruolo amministrativo destinatario (alternativo alla colonna 10)
373        																				--						    Se colonna 1 =UT o SV: N.ro di matricola dell'utente destinatario o che occupa la scrivania destinataria
374        																				--						13: Identificativo della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario
375        																				--						14: Denominazione/nome della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario (può essere la denominazione semplice o preceduta da quella di tutte le UO superiori separate da "|")
376        																				--						15: Nri livello della UO in cui si espleta il ruolo amministrativo destinatario o dalla quale risalire alla/e UO del livello/tipo indicati in cui si espleta il ruolo amministrativo destinatario (tutti o alcuni; però se si specifica un livello è obbligatorio indicare tutti i livelli superiori; vanno specificati come appaiono nella GUI, ovvero romani se previsto, 0 o -- se nulli; sono separati dal separatore dei livelli valido per il soggetto produttore/AOO di appartenenza della UO)
377        																				--						16:(valore 1) Indica che il ruolo amministrativo destinatario si espleta anche nelle sotto-UO della/e UO rintracciate tramite i valori delle 3 colonne precedenti
378        		CodMotivoInvioIn			IN		VARCHAR2 DEFAULT NULL,				-- Codice del motivo dell'assegnazione/invio in conoscenza (valori codificati in apposita dictionary entry)
379        		MotivoInvioIn				IN		VARCHAR2 DEFAULT NULL,				-- Modivo dell'assegnazione/invio in conoscenza (valori da apposita dictionary entry)
380        		MessaggioInvioIn			IN		VARCHAR2 DEFAULT NULL,				-- Messaggio associato all'invio per competenza/conoscenza
381        		LivelloPrioritaIn			IN		INTEGER DEFAULT NULL,				-- Livello di priorità dell'invio per competenza/conoscenza
382        		TsDecorrAssInvioCCIn		IN		VARCHAR2 DEFAULT NULL,				-- Data e ora future da cui deve decorrere l'assegnazione/invio per conoscenza (da specificare se diversa dalla data di invio; va espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
383        		FlgEmailToSendOut			OUT		PLS_INTEGER,						-- (valori 1/0) Indica se l'e-mail deve essere inviata (=1) o meno (=0 o NULL)
384        																				-- Se non deve essere inviata gli output successivi NON sono valorizzati
385        		IndirizzoMittEmailOut		OUT		VARCHAR2,							-- Casella (gestita nella tabella del modulo mail) da cui inviare la notifica e-mail. Sempre valorizzata se FlgEmailToSendOut=1
386        		IndirizziDestEmailOut		OUT		NOCOPY CLOB,						-- Indirizzi email a cui notificare l'assegnazione/invio per conoscenza (xml conforme a schema LISTA_STD.xsd). Sempre valorizzati se FlgEmailToSendOut=1
387        																				-- Ogni indirizzo è un tag Riga che è formato da una sola colonna
388        		OggEmailOut					OUT		VARCHAR2,							-- Oggetto dell'email di notifica. Sempre valorizzato se FlgEmailToSendOut=1
389        		BodyEmailOut				OUT		VARCHAR2,							-- Testo/corpo dell'email di notifica. Sempre valorizzato se FlgEmailToSendOut=1
390        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
391        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
392        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
393        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
394        
395        	/************ funzione per ricercare le mail archiviate in T_EMAIL_MGO ************/
396        	function TrovaEmail(
397        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
398        																					-- (obblig). Codice identificativo del token di connessione
399        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
400        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd).
401        																					-- Ogni filtro è un tag "Variabile" dell'XML
402        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
403        																					-- I nomi dei filtri possibili sono:
404        																					-- RicercaMailArchiviate: indica se si deve ricercate anche o solo nell'archivio storico della mail (tabelle con prefisso TH_)
405        																					--						Valori ammessi:
406        																					--						solo_archiviate
407        																					--						anche_archiviate
408        																					-- Se la variabile non c'è o è vuota la ricerca NON considera le mail spostate in storico
409        																					-- ClassificaFolder: classifica del folder in cui si devono trovare le e-mail (ricerca esatta case-sensitive)
410        																					-- RicercaNonRicorsiva:
411        																					--					se true significa che si vogliono solo le e-mail nei folder con classifica ClassificaFolder e non quelle nei sub-folder
412        																					--					se false o non valorizzato indica che la ricerca va estesa alla e-mail nei sotto-folder di quello con la classifica indicata in ClassificaFolder,
413        																					-- IdCasella: Id. della/e casselle che hanno ricevuto (se e-mail in entrata) o inviato (se e-mail in uscita) le e-mail. Se più di uno sono separati da ; o ,
414        																					-- IndirizzoCasella: indirizzo/i delle casselle che hanno ricevuto (se e-mail in entrata) o inviato (se e-mail in uscita) le e-mail (ricerca case-insensitive in like senza forzare il % finale). Se più di uno sono separati da ; o ,
415        																					-- FlgIO: serve a restringere la ricerca alle e-mail ricevute (=I) o inviate (=O)
416        																					-- Flusso: valori E, U, N, B e loro combinazioni separate da ; o ,.
417        																					--		   Serve a restringere alle e-mail: in arrivo che non sono ricevute e notifiche(=E); alle ricevute e notifiche in entrata(=N); alle e-mail in uscita (=U)
418        																					-- IndirizzoMittente: parole contenute nell'indirizzo mittente (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
419        																					-- OperMittente(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
420        																					-- MittentePECPEO (valori PEC/PEO): serve a restringere la ricerca alle mail inviate da mittente PEC o ordinario (PEO)
421        																					-- IndirizzoDestinatario: parole contenute nel/negli indirizzi destinatari (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
422        																					-- OperDestinatario(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
423        																					-- Invio al: estremo inferiore della data di invio (se mail PEC ricevuta viene considerata la data attestata dal provider PEC) espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
424        																					-- InvioAl: estremo superiore della data di invio (se mail PEC ricevuta viene considerata la data attestata dal provider PEC) espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
425        																					-- RicezioneDal: estremo inferiore della data di ricezione espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
426        																					-- RicezioneAl: estremo superiore della data di ricezione espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
427        																					-- InseritaDal: estremo inferiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
428        																					-- InseritaAl: : estremo superiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
429        																					-- Oggetto: parole contenute nell'oggetto (ricerca per parole fatta con indici context)
430        																					-- OperOggetto(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
431        																					-- Corpo: parole contenute nel corpo (ricerca per parole fatta con indici context)
432        																					-- AssegnazioneEffettuata
433        																					--			se true si ricercano solo le e-mail ricevute già assegnate
434        																					--			se false si ricercano solo le e-mail ricevute NON ancora assegnate
435        																					-- IncludiAssegnateAdAltri:
436        																					--					se true o NULL indica che devono essere restituite anche le e-mail assegnate ad altri (vale a dire nè all'utente nè a una UO cui è collegato)
437        																					--					se false indica che NON devono essere restituite le e-mail assegnate salvo se assegnate all'utente o una UO cui è collegato
438        																					-- AssegnazioneDal: estremo inferiore della data di assegnazione delle e-mail espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
439        																					-- AssegnazioneAl: estremo superiore della data di assegnazione delle e-mail espresso nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
440        																					-- IdUserAssegnatario: ID_USER (id. della DMT_USERS) del/degli utenti assegnatari delle e-mail (si può specificare più ID_USER separandoli con ;)
441        																					-- IdUOAssegnataria: ID_UO (id. della DMT_STRUTTURA_ORG) della/delle UO assegnatarie delle e-mail (si può specificare più ID_UO separandoli con ;)
442        																					--					 Si possono specificare anche scrivanie premettendo SV al ID_SCRIVANIA
443        																					-- @UOAssegnatari: lista con le UO assegnatarie delle e-mail
444        																					--					ogni riga è un assegnatario:
445        																					--					in colonna 2) ID_UO; 3) flag 1/0 che indica anche le sotto-UO
446        																					-- IdUOLavoro: ID_UO (id. della DMT_STRUTTURA_ORG) della/delle UO dell'utente a cui restringere la ricerca delle mail
447        																					--				Si possono specificare più id. UO separandoli con ;
448        																					-- ProgrEmailDa: estremo inferiore dell'intervallo di ricerca sul progressivo della mail
449        																					-- ProgrEmailA: estremo superiore dell'intervallo di ricerca sul progressivo della mail
450        																					-- AnnoEmailDa: estremo inferiore dell'intervallo di ricerca sull'anno del progressivo della mail
451        																					-- AnnoEmailA: estremo superiore dell'intervallo di ricerca sull'anno del progressivo della mail
452        																					-- TipoProgrEmail: sigla del registro di numerazione del progressivo e-mail (E/U/N/B)
453        																					-- Categoria: serve a restringere la ricerca alle e-mail della/e categorie specificate. Valori possibili:
454        																					--			INTEROP_SEGN (interoperabile con allegata segnatura.xml)
455        																					--   		INTEROP_ECC (notifica interoperabile di eccezione)
456        																					--			INTEROP_CONF (notifica interoperabile di conferma)
457        																					--			INTEROP_AGG (notifica interoperabile di aggiornamento)
458        																					--			INTEROP_ANN (notifica interoperabile di annullamento di registrazione)
459        																					--			PEC = e-mail inviata da PEC e NON interoperabile
460        																					--			ANOMALIA = busta anomalia (ovvero e-mail inviata da una casella ordinaria)
461        																					--			PEC_RIC_ACC = ricevuta PEC di accettazione
462        																					--			PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione
463        																					--			PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente
464        																					--			PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna
465        																					--			PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna
466        																					--			PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna
467        																					--			DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider
468        																					--			PEO_RIC_CONF = Conferma di lettura (posta ordinaria)
469        																					--			PEC_RIC_CONF = Conferma di lettura (posta certificata)
470        																					--			ALTRO = altre e-mail generate in automatico dai mail server / provider (come quelle di esurimento quote sulle caselle)
471        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
472        																					-- StatoLavorazioneUrgenza: serve a serve a restringere la ricerca alle e-mail che hanno uno degli stati di lavorazione indicati e/o contrassegno di verifica urgente. Valori possibili:
473        																					--			da_lavorare
474        																					--			in_lavorazione
475        																					--			verifica_urgente
476        																					--			lavorazione_aperta
477        																					--			lavorazione_conclusa
478        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
479        																					-- CruscottoMail: (valori 1/0/NULL) se 1 indica che la lista da popolare è quella del cruscotto mail (lista mail fuori dalla scrivania richiamata da apposita voce di menu' applicativo)
480        																					-- LockedBy: serve a restringere la ricerca alle e-mail il cui stato di lock è come segue:
481        																					--			#NONE 	: non sono locked da nessuno
482        																					--			#ME		: sono locked dall'utente collegato ovvero quello a nome di cui sta lavorando
483        																					--			#OTHERS : altri operatori dall'utente collegato ovvero quello a nome di cui sta lavorando
484        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha il lock sulle e-mail
485        																					-- MovimentatoDa: serve a restringere la ricerca alle e-mail assegnate (=set UO) o smistate (=messe in carico)
486        																					--			#ME		: sono movimentate dall'utente collegato ovvero quello a nome di cui sta lavorando
487        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha assegnato o smistato le e-mail
488        																					-- MovimentatiDal: estremo inferiore dell'intervallo di ricerca sulla data di assegnazione o smistamento (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
489        																					-- MovimentatiAl: estremo superiore dell'intervallo di ricerca sulla data di assegnazione o smistamento (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
490        																					-- LavoratoDa: serve a restringere la ricerca alle e-mail lavorate da un dato operatore
491        																					--			#ME		: sono lavorate dall'utente collegato ovvero quello a nome di cui sta lavorando
492        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha lavorate le e-mail
493        																					-- LavoratiDal: estremo inferiore dell'intervallo di ricerca sulla data di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
494        																					-- LavoratiAl: estremo superiore dell'intervallo di ricerca sulla data di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
495        																					-- StatoConsolidamento: serve a restringere la ricerca alle e-mail inviate che hanno uno degli stati di consolidamento indicati. Valori possibili:
496        																					--			<non valorizzato> = stato di consolidamento ancora non valorizzato (nessuna ricevuta o notifica è pervenuta)
497        																					--			in_invio
498        																					--			accettata
499        																					--			non_accettata
500        																					--			avvertimenti_in_consegna
501        																					--			errori_in_consegna
502        																					--			consegnata
503        																					--			consegnata_parzialmente
504        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
505        																					-- StatoIAC: serve a restringere la ricerca alle e-mail inviate che hanno uno degli stati di invio e/o accettazione e/o consegna indicati. Valori possibili:
506        																					--			I:OK 	inviata
507        																					--			I:KO	invio fallito
508        																					--			I:IP	invio in corso
509        																					--			I:W		avvertimenti in invio
510        																					--			A:OK	accettata
511        																					--			A:KO	non accettata
512        																					--			A:IP	accettazione in corso
513        																					--			A:W		presunta mancata accettazione
514        																					--			A:ND	accettazione non valorizzata
515        																					--			C:OK	consegnata
516        																					--			C:KO	consegna fallita
517        																					--			C:IP	consegna in corso
518        																					--			C:W		presunta mancata consegna
519        																					--			C:ND	consegna non valorizzata
520        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
521        																					-- StatoProtocollazione: indica lo stato di protocollazione della mail (se valorizzato resringe la ricerca alle e-mail in entrata). Valori possibili:
522        																					--			N = non protocollata
523        																					--			C = protocollata
524        																					--			P = protocollata parzialmente
525        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
526        																					-- StatoUtente: serve a restringere la ricerca alle e-mail che hanno il/uno degli stati utente indicati in questo filtro (ID_REC_DIZ). Se più di uno gli stati vanno separati con , o ;
527        																					-- CodAzioneDaFare: serve a restringere la ricerca alle e-mail che hanno come COD_AZIONE_DA_FARE il codice/i indicati qui. Se più di uno gli stati vanno separati con , o ;
528        																					-- 					Il valore NONE significa NESSUNA AZIONE da fare settata
529        																					-- 					Il valore ANY significa QUALSIASI AZIONE da fare settata
530        																					-- Priorita: serve a restringere la ricerca alle e-mail con la/le priorità indicate nel filtro. Valori possibili:
531        																					--			alta
532        																					--			normale
533        																					--			bassa
534        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
535        																					-- Contrassegno: serve a restringere la ricerca alle e-mail che hanno il/uno dei contrassegni indicati in questo filtro (ID_REC_DIZ). Se più di uno i contrassegni vanno separati con , o ;
536        																					-- InviataConferma: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata conferma (interoperabile o meno)
537        																					-- InviataEccezione: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata eccezione/rifiuto (interoperabile o meno)
538        																					-- InviataRisposta: Serve a restringere la ricerca alle e-mail ricevute per le quali è stata (true) o non è stata (false) mandata risposta
539        																					-- Inoltrata: Serve a restringere la ricerca alle e-mail inoltrate (true) o meno (false)
540        																					-- RicevuteConferme: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) conferma interoperabile o conferma di lettura
541        																					-- RicevuteEccezioni: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) eccezione interoperabile
542        																					-- RicevutiAggiornamenti: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) notifica interoperabile di aggiornamento
543        																					-- RicevutiAnnullamenti: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) notifica interoperabile di annullamento di registrazione
544        																					-- RicevutiErroriTrasmConsegna:: Serve a restringere la ricerca alle e-mail inviate per le quali è arrivata (true) o non è arrivata (false) ricevuta PEC di mancata accettazione/consegna o delivery status notification
545        																					-- PresenzaAllegati:
546        																					--			se true si ricercano solo le e-mail con uno o più allegati
547        																					--			se false si ricercano solo le e-mail senza allegati
548        																					-- PresenzaAvvertimenti:
549        																					--			se true si ricercano solo le e-mail ricevute che hanno avvertimenti
550        																					--			se false si ricercano solo le e-mail ricevute che NON hanno avvertimenti
551        																					-- NroGiorniStatoLavorazioneApertoDa: estremo inferiore del n.ro di giorni da cui lo stato di lavorazione è aperto
552        																					-- NroGiorniStatoLavorazioneApertoAl: estremo superiore del n.ro di giorni da cui lo stato di lavorazione è aperto
553        																					-- NroAllegatiDa: estremo inferiore del n.ro di allegati che devono avere le e-mail da ricercare
554        																					-- NroAllegatiA: estremo superiore del n.ro di allegati che devono avere le e-mail da ricercare
555        																					-- DimensioneDa: estremo inferiore della dimensione - in bytes - che devono avere le e-mail da ricercare
556        																					-- DimensioneA: estremo superiore della dimensione - in bytes - che devono avere le e-mail da ricercare
557        																					-- NroDestinatariDa: estremo inferiore del n.ro di destinatari che devono avere le e-mail da ricercare
558        																					-- NroDestinatariA: estremo superiore del n.ro di destinatari che devono avere le e-mail da ricercare
559        																					-- ChiusuraDal: estremo inferiore della data di chiusura/archiviazione nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
560        																					-- ChiusuraAl: estremo superiore della data di chiusura/archiviazione nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
561        																					-- ChiusuraEffettuataDa: serve a restringere la ricerca alle e-mail chiuse/archiviate da un dato operatore
562        																					--			#ME		: sono chiuse dall'utente collegato ovvero quello a nome di cui sta lavorando
563        																					--			ID_UTENTE - PK in tabella T_UTENTI_MOD_PEC - dello specifico utente che ha chiuso le e-mail
564        																					-- IdEmailRisposteA: ID_EMAIL della mail di cui quelle da ricercare devono essere delle risposte
565        																					-- IdEmailInoltroDi: ID_EMAIL della mail di cui quelle da ricercare devono essere un inoltro
566        																					-- IdEmailRif: ID_EMAIL della mail di cui quelle da ricercare devono essere una mail derivante quale: una ricevuta PEC, una notifica interoperabile, una delivery status notificatione o una conferma di ricezione
567        																					-- CodCategoriaReg: Codice della categoria (PG = Protocollo generale ecc) della registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
568        																					-- RegistroReg: Siglia del registro della registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
569        																					-- AnnoRegDa: estremo inferiore intervallo di ricerca su anno di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
570        																					-- AnnoRegA: estremo superiore intervallo di ricerca su anno di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
571        																					-- NroRegDa: estremo inferiore intervallo di ricerca su N° di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
572        																					-- NroRegA: estremo superiore intervallo di ricerca su N° di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail)
573        																					-- DtRegDal: estremo inferiore intervallo di ricerca su data di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail). Espresso nel formato dato dal parametro di config. FMT_STD_DATA
574        																					-- DtRegAl: estremo superiore intervallo di ricerca su data di registrazione di una unità documentaria collegata alla mail (vale a dire a cui la mail ha dato luogo o i cui contenuti sono stati trasmessi con la mail). Espresso nel formato dato dal parametro di config. FMT_STD_DATA
575        																					-- MessageId: id. del messaggio ricevuto o inviato (ricerca case insensitive in like senza forzare % nè all'inizio nè alla fine)
576        																					-- ItemLavorazione.Note: ricerca per parole contenute nelle annotazioni libere apposte sulla mail (ricerca per parole fatta con indici context)
577        																					-- ItemLavorazione.Tag: ricerca sui tag apposti sulla mail. Ricerca esatta.
578        																					-- Può essere indicata una lista di più tag separati da ; o ,
579        																					-- Si possono inoltre indicare i valori sepeciali: #NONE = nessun tag presente, #ANY = un qualsiasi tag presente
580        																					-- ItemLavorazione.NomeFile parole contenute nel nome di file associati alla mail come "Item lavorazione"(ricerca per parole fatta con indici context; . e _ si intendono come separatori di parole)
581        																					-- OperItemLavorazione.NomeFile (considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
582        																					-- NomeAttach parole contenute nel nome degli allegati della mail (ricerca per parole fatta con indici context; . e _ si intendono come separatori di parole)
583        																					-- OperNomeAttach (considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
584        																					-- IdUdTrasmessa Id. UD di unità documentaria trasmessa in uscita con le mail da estarre
585        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
586        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne: da 1 a 10, da 71 a 76 + 21, 22, 23, 36, 40, 87). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
587        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
588        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
589        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
590        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
591        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
592        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
593        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
594        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
595        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
596        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
597        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
598        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
599        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
600        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
601        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema.
602        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
603        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
604        																					-- La colonna 1 sarà presente comunque.
605        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
606        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
607        																					-- Ogni e-mail trovata è un tag Riga che può contenere le seguenti colonne:
608        																					-- 1: ID_EMAIL (PK interna)
609        																					-- 2: MessageId della busta S/MIME
610        																					-- 3: Flag In/Out: I = e-mail ricevuta; O = e-mail inviata
611        																					-- 4: Id.(MAILBOX_ACCOUNT.ID_ACCOUNT) della casella che ha ricevuto (se colonna 3 = I) o inviato (se colonna 3 = O) la mail
612        																					-- 5: Indirizzo della casella che ha ricevuto (se colonna 3 = I) o inviato (se colonna 3 = O) la mail
613        																					-- 6: Categoria dell'e-mail; valori possibili: INTEROP_SEGN (interoperabile con allegata segnatura.xml), INTEROP_ECC (notifica interoperabile di eccezione), INTEROP_CONF (notifica interoperabile di conferma), INTEROP_AGG (notifica interoperabile di aggiornamento), INTEROP_ANN (notifica interoperabile di annullamento di registrazione), PEC = e-mail inviata da PEC e NON interoperabile; ANOMALIA = busta anomalia (ovvero e-mail inviata da una casella ordinaria); PEC_RIC_ACC = ricevuta PEC di accettazione, PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione, PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente, PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna, PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna, PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna, DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider, PEO_RIC_CONF = Conferma di lettura (posta ordinaria), PEC_RIC_CONF = Conferma di lettura (posta certificata); ALTRO = altre e-mail generate in automatico dai mail server / provider (come quelle di esurimento quote sulle caselle)
614        																					-- 7: Data e ora di scarico (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
615        																					-- 8: Data e ora di invio dal client, valorizzata anche per le mail ricevute (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
616        																					-- 9: Data e ora di invio attestata dal provider PEC (solo per le mail ricevute provenienti da PEC) (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
617        																					-- 10: Dimensione dell'e-mail in bytes
618        																					-- 11: URI a cui reperire l'eml della mail (con notazione di StorageUtil)
619        																					--	    l'URI non viene restituito se è quello della ricevuta di consegna e non della mail inviata
620        																					-- 12: (valori 1/0) Indica se la mail è stata marcata (=1) come spam o no (=0)
621        																					-- 13: Stato della mail se marcata come spam; valori possibili: B = bloccata, RS = richiesto sblocco, S = sbloccata, R = rigettata a seguoto dello sblocco
622        																					-- 14: Indica se la mail, qualora sia una ricevuta PEC, è: C = Completa, S = Sintetica, B = Breve
623        																					-- 15: Stato di consolidamento della mail (se inviata); valori possibili: accettata; non accettata; avvertimenti in consegna, errori in consegna, consegnata, consegnata parzialmente
624        																					-- 16: N.ro complessivo di allegati della mail
625        																					-- 17: N.ro di allegati firmati digitalmente
626        																					-- 18: N.ro di allegati NON firmati digitalmente
627        																					-- 19: (valori 1/0) Indica se la mail è firmata (=1) o meno (=0)
628        																					-- 20: (valori 1/0) Se 1 significa che qualora l'e-mail ricada in una delle categorie ricevute PEC, notifiche interoperabili e delivery status notification il sistema non è stato in grado di associarla in automatico all'e-mail inviata cui si riferisce
629        																					-- 21: Indirizzo mittente (da cui provine la mail; valorizzato solo per e-mail in entrata)
630        																					-- 22: Oggetto della mail
631        																					-- 23: Corpo della mail
632        																					-- 24: Indirizzi destinatari della mail (tutti, sia primari che in conoscenza), separati da , se più di uno
633        																					-- 25: Indirizzi destinatari primari, separati da , se più di uno
634        																					-- 26: Indirizzi destinatari in cc, separati da , se più di uno
635        																					-- 27: Indirizzi destinatari in ccn, separati da , se più di uno
636        																					-- 28: Avvertimenti sulla mail (solo se in entrata) rilevati e memorizzati dal componente che scarica le e-mail dalla casella
637        																					-- 29: Indica chi ha il lock sulla mail (Cognome e Nome + username)
638        																					-- 30: (valori 1/0) Indica se e-mail con richiesta di conferma (sia se mail in entrata, sia se e-mail inviata; nel caso di mail interoperabile è la richiesta di conferma della Segnatura.xml)
639        																					-- 31: Data e ora di ultima assegnazione dell'e-mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
640        																					-- 32: Attuale assegnatario dell'e-mail
641        																					-- 33: (valori 1/0) Indica se e-mail per cui è stata inviata risposta (=1) o meno (=0)
642        																					-- 34: (valori 1/0) Indica se e-mail inoltrata (=1) o meno (=0)
643        																					-- 35: Stato di protocollazione della mail (valorizzato solo per mail ricevute). Valori possibili: C = Completa, ovvero protocollati tutti i file, P = Parziale, ovvero protocollati solo alcuni file, valore vuoto = non protocollata
644        																					-- 36: Contrassegno (decodificato)
645        																					-- 37: (valori 1/0) Indica se sono pervenute notifiche di eccezione (=1) o meno (=0) a fronte della mail (inviata)
646        																					-- 38: (valori 1/0) Indica se sono pervenute notifiche di conferma (=1) o meno (=0) a fronte della mail (inviata)
647        																					-- 39: (valori 1/0) Indica se sono pervenute notifiche di aggiornamento(=1) o meno (=0) a fronte della mail (inviata)
648        																					-- 40: Livello di priorità della mail: alta, normale, bassa
649        																					-- 41: Destinatari della mail come indicati in fase di invio, eventualmente anche come liste di distribuzione e nominativi della rubrica (tutti, sia primari che in conoscenza), separati da , se più di uno
650        																					-- 42: Indirizzi destinatari primari come indicati in fase di invio, separati da , se più di uno
651        																					-- 43: Indirizzi destinatari in cc come indicati in fase di invio, separati da , se più di uno
652        																					-- 44: Indirizzi destinatari in ccn come indicati in fase di invio, separati da , se più di uno
653        																					-- 45: Nome del folder in cui è collocata la mail (valorizzato solo se il folder è uno solo e diverso da quello con la classifica eventualmente indicata nel filtro ClassificaFolder)
654        																					-- 46: Estremi dei protocolli/registrazioni - effettuati dal soggetto che ha ricevuto la mail, se e-mail in entrata, o l'ha inviata, se e-mail in uscita - associati alla mail (sia per e-mail in entrata che in uscita). Se più di una sono separate da ;
655        																					-- 47: Lista di ID_UD delle unità documentarie cui la mail ha dato luogo (se in entrata) o i cui dati e/o file sono stati trasmessi con la mail (se in uscita). Se più di una sono separate da ;
656        																					--	   NOTA: le ID_UD in questa colonna sono nello stesso ordine dei rispettivi estremi di protocollo/registrazione in colonna 46
657        																					-- 48: Estremi del/i protocolli/registrazioni esterni associati alla mail (solo per e-mail interoperabili inviate)
658        																					-- 49: Id. email dell'email da cui quella corrente deriva (se è una ricevuta PEC o notifica interoperabile o una delivery status notification o una mail di conferma ricezione)
659        																					-- 50: Stato dell'e-mail per l'utente di lavoro/collegato
660        																					-- 51: (valori 1/0) Se 1 indica che sulla mail sono presenti commenti destinati all'utente di lavoro/collegato
661        																					-- 52: (valori 1/0) Indica se e-mail assegnata personalmente all'utente (1) o no (=0)
662        																					-- 53: (valori 1/0) Indica se e-mail assegnata all'utente o ad una sua UO (=1) o meno (=0)
663        																					-- 54: (valori 1/0) Indica se sono pervenute notifiche di annullamento di registrazione (=1) o meno (=0) a fronte della mail (inviata)
664        																					-- 55: flag che indica presenza di allegati firmati (=AF), presenza di alleegati tutti non firmati (=A) o assenza di allegati (se NULL)
665        																					-- 56: Serve come alt della colonna precedente per indicare il n.ro totale di allegati, quanti firmati e quanti no
666        																					-- 57: Estremi del protocollo/registrazione del mittente della mail ricevuta (se interoperabile)
667        																					-- 58: Oggetto del protocollo/registrazione del mittente della mail ricevuta (se interoperabile)
668        																					-- 59: Tipo dell'email
669        																					-- 60: Sotto-tipo dell'email
670        																					-- 61: (valori 1/0) Flg mail certificata. La certificazione si riferisce al mittente
671        																					-- 62: (valori 1/0) Flg mail di interoperabilità tra protocolli
672        																					-- 63: Icona da utilizzare (della macro+microcategoria) per la mail
673        																					-- 64: Stato di lavorazione della mail
674        																					-- 65: (valori 2/1/0) Grado di urgenza della verifica da effettuare se presente contrassegno di verifica urgente
675        																					-- 66: Id. del contrassegno di verifica urgente da effettuare (valorizzato se è un contrassegno che indica verifica urgente da effettuare)
676        																					--		Valori possibili: ALERT.ECC_INTEROP, ALERT.ERR_TRASM, ALERT.WARNING_TRASM, ALERT.NO_TRASM (la decodifica è in colonna 36)
677        																					-- 67: Messaggio a corredo ultima assegnazione della mail
678        																					-- 68: Azione da fare sulla mail (decodifica)
679        																					-- 69: Cod. azione da fare sulla mail
680        																					-- 70: Dettaglio azione da fare sulla mail
681        																					-- 71: Progressivo della mail da mostrare nella GUI(ID univoco)
682        																					-- 72: Progressivo della mail da usare per download/stampa
683        																					-- 73: Progressivo della mail da usare per ordinare
684        																					-- 74: Data e ora di salvataggio della mail in tabella T_EMAIL_MGO (nel formato dato dal parameto FMT_STD_TIMESTAMP)
685        																					-- 75: N.ro di giorni (arrotondato agli interi) da cui lo stato di lavorazione è "lavorazione_aperta"
686        																					-- 76: Codice stato di invio. Valori possibili: OK (inviata), KO (invio fallito), IP (invio in corso)
687        																					-- 77: Codice stato di accettazione. Valori possibili: OK (accettata), KO (non accettata), W (presunta mancata accettazione), IP (accettazione in corso) ND (non ancora valorizzato)
688        																					-- 78: Codice stato di consegna. Valori possibili: OK (consegnata), KO (consegna fallita), W (presunta mancata consegna), IP (consegna in corso) ND (non ancora valorizzato)
689        																					-- 79: Stato di invio (decodificato)
690        																					-- 80: Stato di accettazione (decodificato)
691        																					-- 81: Stato di consegna (decodificato)
692        																					-- 82: Data e ora da cui c'è il lock sulla mail (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
693        																					-- 83: Data e ora di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
694        																					-- 84: Annotazioni associate alla mail (in ordine dalla 1 in su)
695        																					-- 85: (valori 1/0) Flag di conferma di lettura
696        																					-- 86: Tag apposto/i sulla mail (in ordine dalla 1 in su)
697        																					-- 87: Data e ora di chiusura/archiviazione della mail (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
698        																					-- 88: Nominativo dell'operatore che ha chiuso/archiviato la mail
699        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
700        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
701        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
702        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
703        
704        	/******** funzion che carica tutti i dati di una e-mail (in entrata o in uscita, purchè archiviata in T_EMAIL_MGO) e delle sue e-mail collegate ******/
705        	function LoadDettEmail(
706        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
707        																					-- (obblig). Codice identificativo del token di connessione
708        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
709        			IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail ricevuta da registrare
710        			FlgSoloAbilitazioniIn		IN		PLS_INTEGER,						-- (valori 1/0) Se 1 nell'XMLDatiEmailOut vengono tirate fuori solo le informazioni di abilitazione alle azioni
711        			XMLDatiEmailOut				OUT		NOCOPY CLOB,						-- Dati della mail (XML conforme a schema SezioneCache.xsd)
712        																					-- I dati restituiti corrispondono ai seguenti tag Variabile:
713        																					-- FlgIO    		valori I/O indica se email ricevuta (I) o inviata (O)
714        																					-- TitoloGUIDettaglioEmail	Stringa da usare come titolo della finestra in cui si mostra il dettaglio mail
715        																					-- FlgRicNotSenzaPredecessore	valori 1/0 Se 1 indica che è una ricevuta o notifica "orfana", ovvero che non è associata alla mail da cui deriva
716        																					-- MessageId 		MessageId della mail (nel caso di mail ricevuta da casella PEC è l'identificativo univoco della mail assegnatole dal provider PEC)
717        																					-- ProgrMsg			Progressivo che identifica la mail
718        																					-- ProgrMsgXDownloadStampa	Progressivo che identifica la mail formattato x il download/stampa
719        																					-- ProgrBozza		Progressivo che identificava la mail come bozza, prima dell'invio
720        																					-- Casella.Id		Id. della casella (ID_CASELLA ovvero MAILBOX_ACCOUNT.ID_ACCOUNT) che ha ricevuto/inviato la mail
721        																					-- Casella.Account	Indirizzo della casella che ha ricevuto/inviato la mail
722        																					-- Casella.IsPEC 	valori true/false; indica se la casella che ha ricevuto/inviato la mail è PEC o meno
723        																					-- Categoria     	Categoria della mail (è il valore del campo T_EMAIL_MGO.CATEGORIA)
724        																					-- Dimensione       Dimensione in bytes della mail
725        																					-- URI              URI (con notazione di StorageUtil) a cui reperire l'eml (busta di trasporto intera in caso di e-mail ricevuta)
726        																					-- FlgSpam          valori 1/0: se 1 indica che la mail è stata marcata come spam
727        																					-- StatoConsolidamento 	Stato di consolidamento per le e-mail inviate.
728        																					--					Valori possibili: in bozza; accettata; non accettata; avvertimenti in consegna, errori in consegna, consegnata, consegnata parzialmente, protocollazione confermata, protocollazione parzialmente confermata
729        																					-- StatoInvio		Stato di invio (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoInvio)
730        																					-- IconaStatoInvio	Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
731        																					-- StatoAccettazione		Stato di accettazione (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoAccettazione)
732        																					-- IconaStatoAccettazione Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
733        																					-- MsgErrMancataAccettazione	Messaggio di errore della mancata accettazione
734        																					-- StatoConsegna		Stato di consegna (solo per e-mail inviata) (da usare come alt dell'icona indicata in IconaStatoConsegna)
735        																					-- IconaStatoConsegna Valori possibili: OK (spunta verde), IP (spunta gialla), KO (croce rossa), W (croce arancione), ND (insieme vuoto grigio)
736        																					-- MsgErrMancataConsegna 		Messaggio di errore della mancata consegna o presunta mancata consegna
737        																					-- MsgErrRicevutaPEC			Messaggio di errore della mail se ricevuta PEC che notifica un errore o probabile problema
738        																					-- StatoLavorazione Valori possibili: da lavorare, in lavorazione, lavorazione conclusa, lavorazione aperta
739        																					-- TsAggStatoLavorazione	data e ora di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
740        																					-- DataAggStatoLavorazione 	data - troncata al giorno - di ultimo aggiornamento dello stato di lavorazione (nel formato dato dal parametro di config. FMT_STD_DATA)
741        																					-- OrarioAggStatoLavorazione orario - ore e minuti in formato HH24:MI - di ultimo aggiornamento dello stato di lavorazione
742        																					-- IconaMicroCategoria Serve per determinare l'icona della macro+micro cataegoria della mail
743        																					--					Valori possibili:
744        																					--					ricezione_documento
745        																					--					messaggio_di_sistema
746        																					--					invio_documento
747        																					--					notifica_lettura
748        																					--					notifica_trasmissione
749        																					--					inoltro_mail
750        																					--					risposta_mail
751        																					--					notifica_protocollo_in_entrata
752        																					--					notifica_protocollo_in_uscita
753        																					-- Tipo				Tipo di email. Valori possibili:
754        																					--					Posta in entrata
755        																					--					Posta in uscita
756        																					--					Notifica trasmissione
757        																					--					Notifica lettura
758        																					--					Notifica protocollo in entrata
759        																					--					Notifica protocollo in uscita
760        																					-- Sottotipo		Sotto-tipo di email. Valori possibili:
761        																					--					Ricezione documento
762        																					--					Messaggio di sistema
763        																					--					Invio documento
764        																					--					Inoltro e-mail
765        																					--					Risposta
766        																					--					Conferma protocollazione
767        																					--					Notifica di eccezione
768        																					--					Aggiornamento
769        																					--					Annullamento protocollazione
770        																					--					Accettazione
771        																					--					Mancata accettazione
772        																					--					Avvenuta consegna
773        																					--					Presunta mancata consegna
774        																					--					Mancata consegna
775        																					--					Delivery status notification
776        																					-- FlgPEC			valori 1/0: se 1 significa che è una mail certificata, se 0 che è una mail ordinaria (si intende che il mittente è certificato)
777        																					-- FlgInteroperabile valori 1/0: se 1 è una mail di interoperabilità tra Protocolli
778        																					-- NroAllegati		N.ro di allegati (inclusi allegati interoperabilità quali Segnatura.xml ecc)
779        																					-- NroAllegatiFirmati	N.ro di allegati firmati digitalmente
780        																					-- FlgEmailFirmata	valori 1/0 Se 1 indica che la mail è firmata (l'intera busta SMIME)
781        																					-- FlgNoAssociazioneAutomatica	valori 1/0 	Se 1 indica che la mail - una mail in ingresso di tipo: ricevuta PEC, notifica interoperabile, ricevuta di lettura o notifica di errore in trasmissione/consegna - non è stata assciata in automatico alla mail inviata cui si riferisce
782        																					-- AccountMittente	Indirizzo mittente
783        																					-- Subject			Subject/oggetto della mail
784        																					-- Body				Corpo della mail (quello in formato text/plain)
785        																					-- EnteRegMitt		Denominazione dell'Ente mittente che ha effettuato la registrazione riportata nella Segnatura.xml (e-mail interoperabile in entrata)
786        																					-- SiglaRegistroRegMitt Sigla del registro della registrazione assegnata dal mittente (se e-mail interoperabile in entrata)
787        																					-- NumRegMitt		Numero di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
788        																					-- AnnoRegMitt		Anno di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
789        																					-- DtRegMitt		Data di registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata; nel formato dato dal parametro di config. FMT_STD_DATA)
790        																					-- OggettoRegMitt	Oggetto della registrazione/protocollazione assegnata dal mittente (se e-mail interoperabile in entrata)
791        																					-- TsLock			Data e ora da cui è stato posto l'ultimo lock sulla mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
792        																					-- DataLock 		data - troncata al giorno - da cui è stato posto l'ultimo lock sulla mail (nel formato dato dal parametro di config. FMT_STD_DATA)
793        																					-- OrarioLock 		orario - ore e minuti in formato HH24:MI - da cui è stato posto l'ultimo lock sulla mail
794        																					-- DesUtenteLock	Cognome e nome dell'operatore che ha posto l'ultimo lock sulla mail
795        																					-- DesOperLock		Operazione che ha determinato l'ultimo lock sulla mail
796        																					-- FlgRichConferma	valori 1/0 (può essere 1 solo per le mail interoperabili) Se 1 indica che è stata richiesta conferma di protocollazione della mail, se 0 no
797        																					-- FlgRichConfermaLettura	valori 1/0 Se 1 indica che è stata richiesta conferma di lettura della mail, se 0 no
798        																					-- TsUltimaAssegnazione Data e ora da di ultima assegnazione della mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
799        																					-- DataUltimaAssegnazione 	data - troncata al giorno - di ultima assegnazione della mail (nel formato dato dal parametro di config. FMT_STD_DATA)
800        																					-- OrarioUltimaAssegnazione orario - ore e minuti in formato HH24:MI - di ultima assegnazione della mail
801        																					-- DesUOAssegnataria	Denominazione dell'Unità Organizzativa attuale assegnataria della mail
802        																					-- DesUtenteAssegnatario	Cognome e nome dell'operatore attuale assegnatario della mail
803        																					-- MsgUltimaAssegnazione Messaggio associato all'ultima assegnazione
804        																					-- FlgInviataRisposta	valori 1/0 (può essere 1 solo per le mail ricevute) Se 1 indica che è stata inviata una mail di risposta
805        																					-- FlgInoltrata			valori 1/0. Se 1 indica che la mail è stata inoltrata
806        																					-- StatoProtocollazione	Stato di protocollazione (valorizzato solo per le mail in entrata che non sono ricevute/notifiche/mail automatiche). Valori possibili: non protocollata, protocollata, protocollata parzialmente
807        																					-- Contrassegno			Contrassegno (decodificato) apposto sulla mail
808        																					-- IdRecDizContrassegno Codice del contrassegno apposto sulla mail
809        																					-- FlgRicevutaEccezioneInterop 		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di eccezione
810        																					-- FlgRicevutaConfermaInterop		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di conferma
811        																					-- FlgRicevutoAggiornamentoInterop	valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di aggiornamento
812        																					-- FlgRicevutoAnnRegInterop 		valori 1/0 (può essere 1 solo per le mail inviate) Indica se a fronte della mail (mail inviata) sono pervenute notifiche interoperabili di annullamento di registrazione
813        																					-- TsRicezione			Data e ora di scarico dalla casella (valorizzata solo per le mail ricevute; espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
814        																					-- TsIns				Data e ora di salvataggio della mail in T_EMAIL_MGO
815        																					-- TsInvioCertificato	Data e ora di invio certificata dal provider PEC (valorizzata solo per le mail PEC ricevute; espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
816        																					-- TsInvio				Data e ora di invio della mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP). E' una data e ora NON certificata (quella del client mittente nel caso delle mail ricevute)
817        																					-- CodAzioneDaFare		Codice dell'azione da fare sulla mail
818        																					-- AzioneDaFare			Azione da fare sulla mail (decodifica di CodAzioneDaFare)
819        																					-- DettAzioneDaFare		Dettagli su azione da fare sulla mail
820        																					-- MotivoEccezione		Motivo eccezione riportato nell'allegato Eccezione.xml
821        																					-- LivPriorita 			Livello di priorotà della mail: alta, normale, bassa
822        																					-- FlgRicevutaCBS		Valorizzato solo per le ricevute PEC in ingresso. Indica se la ricevuta è: completa, breve, sintetica
823        																					-- DestinatariPrincipali	(valorizzato solo per mail ricevuta) Lista dei destinatari principali della mail (separati da , se più di uno)
824        																					-- @DestinatariPrincipali	(valorizzato solo per mail inviata) Lista dei destinatari principali della mail.
825        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
826        																					--							1: indirizzo del destinatario
827        																					--							2: stato di consolidamento relativo al dato destinatario
828        																					--							3: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
829        																					--							4: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
830        																					--							5: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
831        																					--							6: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
832        																					--							7: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
833        																					--							8: estremi di protocollo assegnati dal destinatario
834        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
835        																					--							10: Stato di consegna relativo al dato destinatario
836        																					--							11: Messaggio di mancata consegna/preavviso di mancata consegna al destinatario (solo per mail inviata)
837        																					-- DestinatariCC			(valorizzato solo per mail ricevuta) Lista dei destinatari in copia della mail (separati da , se più di uno)
838        																					-- @DestinatariCC		    (valorizzato solo per mail inviata) Lista dei destinatari in copia della mail.
839        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
840        																					--							1: indirizzo del destinatario
841        																					--							2: stato di consolidamento relativo al dato destinatario
842        																					--							3: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
843        																					--							4: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
844        																					--							5: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
845        																					--							6: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
846        																					--							7: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
847        																					--							8: estremi di protocollo assegnati dal destinatario
848        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
849        																					--							10: Stato di consegna relativo al dato destinatario
850        																					--							11: Messaggio di mancata consegna/preavviso di mancata consegna al destinatario (solo per mail inviata)
851        																					-- @DestinatariCCN		    (valorizzato solo per mail inviata) Lista dei destinatari in copia nascosta della mail.
852        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
853        																					--							1: indirizzo del destinatario
854        																					--							2: stato di consolidamento relativo al dato destinatario
855        																					--							7: flag 1/0 che se 1 indica che da destinatario è arrivata la ricevuta di avvenuta lettura
856        																					--							9: Codice per icona stato di consegna relativo al dato destinatario
857        																					--							10: Stato di consegna relativo al dato destinatario
858        																					-- EmailPredecessore.IdEmail		ID_EMAIL della mail predecessore da cui quella corrente ha avuto luogo
859        																					-- EmailPredecessore.MessageId		MessageId della mail predecessore da cui quella corrente ha avuto luogo
860        																					-- EmailPredecessore.ProgrMsg			Progressivo che identifica la mail predecessore
861        																					-- EmailPredecessore.ProgrMsgXDownloadStampa	Progressivo che identifica la mail predecessore formattato x il download/stampa
862        																					-- EmailPredecessore.TsIns			Data e ora di salvataggio in tabella T_EMAIL_MGO della mail precedecessore da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
863        																					-- EmailPredecessore.FlgIO			valori I/O indica se la email predecessore da cui quella corrente ha avuto luogo è ricevuta (I) o inviata (O)
864        																					-- EmailPredecessore.Categoria		Categoria della mail precedecessore da cui quella corrente ha avuto luogo(è il valore del campo T_EMAIL_MGO.CATEGORIA)
865        																					-- EmailPredecessore.TsInvio		Data e ora di invio della mail precedecessore da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
866        																					-- EmailPredecessore.TsRicezione	Data e ora di scarico della mail precedecessore (ricevuta) da cui quella corrente ha avuto luogo (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
867        																					-- EmailPredecessore.Casella.Account	Indirizzo della casella che ha scaricato la mail predecessore (se ricevuta) o da cui la mail predecessore è stata inviata (se e-mail inviata)
868        																					-- EmailPredecessore.Subject			Oggetto della mail precedecessore da cui quella corrente ha avuto luogo
869        																					-- EmailPredecessore.AccountMittente	Indirizzo mittente della mail precedecessore da cui quella corrente ha avuto luogo
870        																					-- EmailPredecessore.IconaMicroCategoria Serve per determinare l'icona della macro+micro cataegoria della mail predecessore
871        																					-- EmailPredecessore.Tipo				Tipo della mail precedecessore da cui quella corrente ha avuto luogo
872        																					-- EmailPredecessore.Sottotipo			Tipo della mail precedecessore da cui quella corrente ha avuto luogo
873        																					-- EmailPredecessore.FlgPEC				valori 1/0: se 1 significa che la mail precedecessore (da cui quella corrente ha avuto luogo) è una mail certificata, se 0 che è una mail ordinaria
874        																					-- EmailPredecessore.FlgInteroperabile	valori 1/0: se 1 significa che la mail precedecessore (da cui quella corrente ha avuto luogo) è una mail diinteroperabilità tra protocolli
875        																					-- EmailPredecessore.DestinatariPrincipali  Indirizzi dei destinatari principali della mail precedecessore da cui quella corrente ha avuto luogo (se più di uno separati da ,)
876        																					-- EmailPredecessore.DestinatariCC			Indirizzi dei destinatari in copia della mail precedecessore da cui quella corrente ha avuto luogo (se più di uno separati da ,)
877        																					-- @EmailPredecessore.EstremiDocTrasmessi  Id. e estremi di registrazione/protocollo del/i documenti trasmessi con la mail predecessore (inviata)
878        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
879        																					-- 							1: ID_UD del documento
880        																					--							2: Estremi di registrazione del documento
881        																					-- @IdEmailInoltrate	Lista con gli id. delle mail di cui quella corrente è un inoltro (anche se inoltro massivo di n mail)
882        																					--						Ogni e-mail precedente di cui quella corrente è inoltro corrisponde ad una riga. La riga contiene una sola colonna con l'IdEmail
883        																					-- NroMailPredecessore					N.ro di mail precedessore
884        																					-- FlgMailPredecessoreStatoLavAperta	(true/false) Se true significa che la/almeno una delle mail predecessore ha stato di lavorazione "aperta"
885        																					-- FlgMailPredecessoreConAzioneDaFare	(true/false) Se true significa che la/almeno una delle mail predecessore ha un azione da fare settata
886        																					-- MailPredecessoriUnicaAzioneDaFare	Azione da fare sulla/e mail predecessore (valorizzata solo se, in caso di più mail, hanno tutte la stessa azione)
887        																					-- @EmailPrecedentiCollegate	Lista delle mail precedenti - dalla capofila, per prima, in avanti - collegate alla mail. Serve per costruire le briciole di pane
888        																					--						E' una lista in cui ogni e-mail precedente è una riga e contiene le seguenti colonne:
889        																					-- 							1: ID_EMAIL
890        																					--							2: Valore con cui mostrare la mail precedente nelle briciole di pane
891        																					-- @EstremiDocTrasmessi  Id. e estremi di registrazione/protocollo del/i documenti trasmessi con la mail (inviata).
892        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
893        																					-- 							1: ID_UD del documento
894        																					--							2: Estremi di registrazione del documento
895        																					-- @EstremiDocDerivati	Estremi di registrazione/protocollazione dei documenti a cui ha dato luogo la mail (in entrata)
896        																					--						 E' una lista in cui ogni documento è una riga e contiene le seguenti colonne:
897        																					-- 							1: ID_UD del documento
898        																					--							2: Estremi di registrazione del documento
899        																					-- @Allegati			Allegati(file) della mail. Ogni allegato è una riga e contiene le seguenti colonne:
900        																					--						1: Nome originale file
901        																					--						2: Mimetype
902        																					--						3: (valori 1/0) Se 1 indica se è pdf o convertibile in pdf
903        																					--						4: (valori 1/0) Se 1 indica se firmato digitalmente
904        																					--						5: Dimensione in bytes
905        																					--						6: Impronta
906        																					--						7: Algoritmo calcolo impronta
907        																					--						8: Encoding impronta (hex o base64)
908        																					--						9: ID_UD della protocollazione/registrazione del file (valorizzata solo se e-mail in entrata)
909        																					--						10:Estremi della protocollazione/registrazione del file (valorizzata solo se e-mail in entrata)
910        																					--						11: Nome file "aggiustato"
911        																					--						12: N.ro progressivo dell'allegato
912        																					-- @ItemLavorazione 	Lista degli item di lavorazione - commenti, tag, file - associati alla mail
913        																					--						E' una lista in cui ogni item è una riga e ogni riga è formata dalle seguenti colonne:
914        																					--						1: Tipo di item. Valori possibili: F = File, AT = Commento e/o tag
915        																					--						2: Nro progressivo dell'item
916        																					--						3: Commento
917        																					--						4: Tag (codice)
918        																					--						5: URI del file
919        																					--						6: Nome del file
920        																					--						7: Dimensione del file (in bytes)
921        																					--						8: Mimetype del file
922        																					--						9: (valori 1/0) Se 1 indica se file firmato digitalmente
923        																					--						10: Impronta del file
924        																					--						11: Algoritmo di calcolo dell'impronta del file
925        																					--						12: Encoding dell'impronta del file (hex o base64)
926        																					--						13: (valori 1/0) Se 1 indica se è pdf o convertibile in pdf
927        																					--						14: Data e ora di inserimento
928        																					--						15: Utente di inserimento
929        																					--						16: Data e ora di ultima modifica
930        																					--						17: Utente di ultima modifica
931        																					--						18: (valori 1/0) Flag di item non modificabile/cancellabile perchè "locked" da qualcuno (da usare per il check "inibisci modifica")
932        																					--						19: (valori 1/0) Se 1 indica che l'item non è modificabile/cancellabile
933        																					--						20: Motivo per cui l'item non è modificabile cancellabile (con dettaglio dell'utente che lo ha riservato o dell''invio per approvazione che lo ha reso immodificabile)
934        																					--						21: (valori 1/0) Se 1 significa che per il tag presente è obbligatorio inserire un commento
935        																					--						22: Tag (decodifica)
936        																					-- @EmailSuccessiveCollegate 	Lista delle e-mail successive derivate da quella corrente.
937        																					--								Ogni e-mail collegata è una riga; se si tratta di una mail inviata seguono tante righe quante i destinatari con i dati relativi ad ogni destinatario
938        																					--								Le colonne di ogni riga sono:
939        																					--						1: valori 1/2: 1 = Riga di e-mail, 2 = Riga di destinatario
940        																					--						2: Id. interno della mail (ID_EMAIL)
941        																					--						3: valori I/O: I = email in entrata, O = mail in uscita
942        																					--						4: Categoria della mail (colonna T_EMAIL_MGO.CATEGORIA)
943        																					--						5: Tipo della mail
944        																					--						6: Data e ora di invio (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
945        																					--						7: Data e ora di scarico, se e-mail ricevuta (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
946        																					--						8: Indirizzo mittente della mail
947        																					--						9: Cognome e nome di chi ha inviato la mail (se inviata)
948        																					--						10: Stato di consolidamento della mail (se inviata)
949        																					--						11: Estremi del protocollo/registrazione assegnato dal mittente della mail
950        																					--						12: Tipo di destinatario: P = Principale, CC = in copia, CCN = in copia nascosta
951        																					--						13: Indirizzo del destinatario
952        																					--						14: stato di consolidamento relativo al dato destinatario
953        																					--						15: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di eccezione
954        																					--						16: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di conferma
955        																					--						17: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di aggiornamento
956        																					--						18: flag 1/0 che se 1 indica che dal destinatario è arrivata notifica interoperabile di annullamento
957        																					--						19: flag 1/0 che se 1 indica che dal destinatario è arrivata la ricevuta di avvenuta lettura
958        																					--						20: estremi di protocollo assegnati dal destinatario
959        																					--						21: Sottotipo della mail
960        																					--						22: (valori 1/0) Se 1 indica e-mail certificata (il mittente), se 0 ordinaria
961        																					--						23: (valori 1/0) Se 1 indica che è una mail legata all'interoperabilità tra protocolli
962        																					--						24: IconaMicroCategoria della mail
963        																					--						25: Stato di lavorazione
964        																					--						26: Codice dell'eventuale contrassegno apposto sulla mail
965        																					--						27: Decodifica dell'eventuale contrassegno apposto sulla mail
966        																					--						28: Progressivo della mail nel formato di visualizzazione nella GUI
967        																					--						29: Progressivo della mail nel formato per la stampa/scarico
968        																					--						30: Data e ora di salvataggio in T_EMAIL_MGO (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
969        																					--						31: Codice per icona stato di invio (se e-mail inviata)
970        																					--						32: Stato di invio (se e-mail inviata)
971        																					--						33: Codice per icona stato di accettazione (se e-mail inviata)
972        																					--						34: Stato di accettazione (se e-mail inviata)
973        																					--						35: Codice per icona stato di consegna (se e-mail inviata)
974        																					--						36: Stato di consegna (se e-mail inviata)
975        																					--						37: Codice per icona stato di consegna relativo al dato destinatario
976        																					--						38: Stato di consegna relativo al dato destinatario
977        																					-- AbilitaInvio				valori true/false Indica se l'azione "Invia" sulla mail (in uscita) va abilitata o meno
978        																					-- AbilitaInvioCopia		valori true/false Indica se l'azione "Invia e-mail come copia" va abilitata o meno
979        																					-- AbilitaSalvaBozza		valori true/false Indica se l'azione "Salva in bozza" sulla mail va abilitata o meno
980        																					-- AbilitaSalvaItemLav		valori true/false Indica se l'azione "Salva item lavorazione" va abilitata o meno
981        																					-- AbilitaRispondi			valori true/false Indica se l'azione "Rispondi" sulla mail va abilitata o meno
982        																					-- AbilitaRispondiATutti	valori true/false Indica se l'azione "Rispondi a tutti" sulla mail va abilitata o meno
983        																					-- AbilitaInoltraEmail		valori true/false Indica se l'azione "Inoltra" sulla mail va abilitata o meno
984        																					-- AbilitaInoltraContenuti  valori true/false Indica se l'azione "Inoltra contenuti" sulla mail va abilitata o meno
985        																					-- AbilitaInoltraEmailSbustata valori true/false Indica se l'azione "Inoltra mail senza busta di trasporto" sulla mail va abilitata o meno
986        																					-- AbilitaAssegna			valori true/false Indica se l'azione "Assegna" sulla mail va abilitata o meno
987        																					-- AbilitaArchivia			valori true/false Indica se l'azione "Archivia" sulla mail va abilitata o meno
988        																					-- AbilitaRiapri			valori true/false Indica se l'azione "Riapri" (inversa di "Archivia") sulla mail va abilitata o meno
989        																					-- AbilitaProtocolla		valori true/false Indica se l'azione "Protocolla" sulla mail va abilitata o meno
990        																					-- AbilitaRepertoria		valori true/false Indica se l'azione "Registra a repertorio" sulla mail va abilitata o meno
991        																					-- AbilitaRegIstanzaAutotutela 	valori true/false Indica se l'azione di creare dalla mail un documento di istanza di autotutela (tributi) va abilitata o meno
992        																					-- AbilitaRegIstanzaCED 		valori true/false Indica se l'azione di creare dalla mail un documento di istanza di esonero per Condizioni Economiche Disagiate (tributi) va abilitata o meno
993        																					-- AbilitaScaricaEmail		valori true/false Indica se l'azione "Scarica e-mail" sulla mail va abilitata o meno
994        																					-- AbilitaScaricaEmailSenzaBustaTrasporto valori true/false Indica se l'azione "Scarica e-mail senza busta PEC trasporto" sulla mail va abilitata o meno
995        																					-- AbilitaNotifInteropConferma valori true/false Indica se l'azione di invio notifica interoperabile di conferma va abilitata o meno
996        																					-- AbilitaNotifInteropEccezione valori true/false Indica se l'azione di invio notifica interoperabile di eccezione va abilitata o meno
997        																					-- AbilitaNotifInteropAggiornamento valori true/false Indica se l'azione di invio notifica interoperabile di aggiornamento va abilitata o meno
998        																					-- AbilitaNotifInteropAnnullamento valori true/false Indica se l'azione di invio notifica interoperabile di annullamento protocollo va abilitata o meno
999        																					-- AbilitaConfermaNonInteropProt	valori true/false Indica se l'azione di invio notifica NON interoperabile di avvenuta protocollazione va abilitata o meno
1000        																					-- AbilitaEccezioneNonInterop		valori true/false Indica se l'azione di invio eccezione NON interoperabile va abilitata o meno
1001        																					-- AbilitaSetAzioneDaFare 			valori true/false Indica se l'azione di impostare/modificare l'azione da fare è abilitata o meno
1002        																					-- AbilitaPresaIncarico				valori true/false Indica se l'azione di presa in carico (=lock per se' stessi) è abilitata o meno
1003        																					-- AbilitaMessaInCarico 			valori true/false Indica se l'azione di messa in carico (a terzi) è abilitata o meno
1004        																					-- AbilitaRilascio 					valori true/false Indica se l'azione di rimozione carico (=unlock) è abilitata o meno
1005        																					-- AbilitaAssociaAInvio				valori true/false Indica se l'azione di associazione manuale alla mail precedente è abilitata
1006        																					-- AbilitaStampaFile				valori true/false Indica se l'azione di stampa di allegati e file item lavorazione va abilitata
1007        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1008        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1009        			ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1010        			IdEmailPrecIn   			IN    	VARCHAR2 DEFAULT NULL				-- Identificativo dell'e-mail precedente dalla quale viene richiamato il dettaglio della mail (come mail successiva). Serve se la mail ha più predecessori
1011        			) return PLS_INTEGER;													-- 1 in caso di successo, 0 in caso di errore
1012        
1013        	----- funzione per ottenere i log delle operazioni più rilevanti avvenute (o anche solo tentate) su un'e-mail
1014        	function GetLogEmail(
1015        			CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1016        																					-- (obblig). Codice identificativo del token di connessione
1017        			IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1018        			IdEmailIn					IN		VARCHAR2,							-- (obblig.) Identificativo - la PK ID_EMAIL - della mail di cui estarre i log
1019        			ListaLogOut					OUT		NOCOPY CLOB,						-- Lista con i log delle operazioni avvenute sul fascicolo / unità documentaria (XML conforme a schema LISTA_STD.xsd)
1020        																					-- Ogni variazione è un tag "Riga" che contiene le seguenti colonne:
1021        																					-- 1: Timestamp dell'operazione (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1022        																					-- 2: Progressivo operazione per ordinamento cronologico
1023        																					-- 3: Id. dell'utente che ha effettuato l'operazione
1024        																					-- 4: Decodifica dell'utente che ha effettuato l'operazione
1025        																					-- 5: Id. dell'utente a nome di cui stava lavorando chi ha effettuato l'operazione
1026        																					-- 6: Decodifica dell'utente a nome di cui stava lavorando chi ha effettuato l'operazione
1027        																					-- 7: Codice del tipo di operazione
1028        																					-- 8: Decodifica del tipo di operazione
1029        																					-- 9: Descrizione/dettagli dell'operazione
1030        																					-- 10:Esito dell'operazione (valori: successo; fallita)
1031        																					-- 11:Messaggio di errore (nel caso di operazione fallita)
1032        			FlgIncludiOpFalliteIn		IN		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 nel log vengono inserite anche le operazioni tentate ma NON andate a buon fine, altrimenti sono estratte solo le operazioni andate a buon fine
1033        			ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1034        			ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1035        			ErrMsgOut					OUT 	VARCHAR2)							-- Messaggio d'errore
1036        			return PLS_INTEGER;														-- 1 in caso di successo, 0 in caso di errore
1037        
1038        	----- serve ad archiviare una o più mail (sia ricevute che inviate)
1039        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1040        	----- su ogni mail elaborata viene subito fatta la commit se richiesta
1041        	function ArchiviaEmail(
1042        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1043        																				-- (obblig). Codice identificativo del token di connessione
1044        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1045        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da archiviare
1046        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1047        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'archiviazione
1048        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1049        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1050        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1051        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1052        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1053        																				-- 1: ID_EMAIL
1054        																				-- 2: PROGR_MSG
1055        																				-- 3: Dati principali della mail (da mostrare come label)
1056        																				-- 4: Esito operazione: OK, KO
1057        																				-- 5: Messaggio di errore
1058        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1059        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1060        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1061        		FlgGestAzioneDaFareIn		IN		VARCHAR2 DEFAULT NULL				-- Indica cosa fare di eventuale azione da fare presente sulla/e e-mail;
1062        																				-- valori possibili:
1063        																				-- COMPL = completamento
1064        																				-- ANN	 = annullamento
1065        																				-- se non valorizzato si intende che non si deve fare nulla(in caso di azione da fare presente l'archiviazione andrà in errore)
1066        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1067        
1068        
1069        	----- serve a riaprire, ovvero annullare l'archiviazione di una o più mail precedentemente archiviate (ovvero è l'azione di contraria all'archiviazione)
1070        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1071        	----- su ogni mail elaborata viene subito fatta la commit se richiesta
1072        	function AnnullaArchiviazioneEmail(
1073        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1074        																				-- (obblig). Codice identificativo del token di connessione
1075        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1076        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da riaprire
1077        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1078        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'annullamento dell'archiviazione (i.e. riapertura)
1079        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1080        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1081        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1082        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1083        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1084        																				-- 1: ID_EMAIL
1085        																				-- 2: PROGR_MSG
1086        																				-- 3: Dati principali della mail (da mostrare come label)
1087        																				-- 4: Esito operazione: OK, KO
1088        																				-- 5: Messaggio di errore
1089        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1090        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1091        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1092        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1093        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail
1094        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1095        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1096        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1097        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1098        
1099        
1100        	----- serve a ri-prendersi una mail precedenetente assegnata in modo che l'assegnatario risulti l'utente che effettua la ripresa o una delle UO cui è associato
1101        	function RiprendiEmail(
1102        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1103        																				-- (obblig). Codice identificativo del token di connessione
1104        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1105        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
1106        		FlgRipresaVsUtenteUOIn		IN		VARCHAR2 DEFAULT 'UO',				-- (obblig.) Valori ammessi UT e UO: serve ad indicare se la mail va ri-messa in carico all'utente (=UT) o ad una delle UO (=UO) cui l'utente è collegato
1107        		IdUORipresaIn				IN		PLS_INTEGER DEFAULT NULL,			-- (obblig. se FlgRipresaVsUtenteUOIn = UO e se l'utente loggato/di lavoro è associato a più UO) UO alla quale mettere in carico la mail, tra quelle cui è collegato l'utente
1108        																				-- 			se IdUORipresaIn non è valorizzata e FlgRipresaVsUtenteUOIn = UO l'email viene rimessa in carico alla UO dell'utente se è una sola, se l'utente è associato a più UO viene dato errore
1109        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1110        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1111        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1112        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1113        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1114        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1115        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1116        
1117        	---------- funzione per eliminare logicamente o fisicamente una mail archiviata in T_EMAIL_MGO
1118        	function EliminaEmail(
1119        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1120        																				-- (obblig). Codice identificativo del token di connessione
1121        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1122        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
1123        		FlgForzaEliminazioneFisicaIn		IN		PLS_INTEGER DEFAULT NULL,	-- Valori 1/0/NULL. Se 1indica che deve essere forzata l'eliminazione fisica e non solo logica della mail
1124        		URIFileDaEliminareOut		OUT		NOCOPY CLOB,						-- Lista xml (schema ListaSTD.xsd) con gli URI, in notazione di storageUtil, dei file da cancellare
1125        																				-- Ogni file è un tag Riga che ha una sola colonna, la 1, con l'URI in notazione di StorageUtil
1126        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1127        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1128        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1129        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1130        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1131        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1132        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1133        
1134        
1135        	---------- funzione per settare l'azione da fare su una mail archiviata in T_EMAIL_MGO
1136        	function SetAzioneDaFareSuEmail(
1137        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1138        																				-- (obblig). Codice identificativo del token di connessione
1139        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1140        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
1141        		CodAzioneDaFareIn			IN		VARCHAR2,							-- Codice dell'azione da fare (valori da apposita DICTIONARY_ENTRY AZIONE_SU_EMAIL)
1142        		DettAzioneDaFareIn			IN		VARCHAR2 DEFAULT NULL,				-- Dettaglio dell'azione da fare
1143        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1144        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1145        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1146        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1147        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1148        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1149        		FlgAzioneCompletataIn		IN		PLS_INTEGER DEFAULT NULL,			-- (viene considerato solo se CodAzioneDaFareIn è NULL o diverso dall'azione già presente in DB)
1150        																				-- Valori 1/0/NULL. Indica se si sta rimuovendo l'azione da fare pre-esistente perchè:
1151        																				-- 1 = completata
1152        																				-- 0 o NULL = annullata
1153        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sull'e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1154        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sull'e-mail
1155        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1156        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1157        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1158        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1159        
1160        	----- serve a mettere un lock - per se stessi o altri - su una o più mail (sia ricevute che inviate)
1161        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1162        	----- su ogni mail elaborata viene subito fatta la commit se richiesta
1163        	function LockEmail(
1164        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1165        																				-- (obblig). Codice identificativo del token di connessione
1166        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente - PK di DMT_USERS - a nome di cui si lavora. Se non valorizzato è l'utente connesso
1167        		IdUserLockForIn				IN		VARCHAR2 DEFAULT NULL,				-- Id. dell'utente - PK di T_UTENTI_MOD_PEC - a cui dare il lock.
1168        																				-- Se non specificato si intende l'utente collegato ovvero quello a nome di cui sta lavorando (IdUserLavoroIn)
1169        		FlgLockImplIn				IN		PLS_INTEGER DEFAULT NULL,			-- valori 1/0/NULL Se 1 significa che il lock da mettere è un lock implicito, ovvero un lock messo in automatico prima di effettuare altre operazioni sulla/e mail
1170        		IdRecDizOperLockIn			IN		VARCHAR2 DEFAULT NULL,				-- Id. - PK di un record di T_VAL_DIZIONARIO - del valore di dizionario che indica l'operazione per effettuare la quale si richiede il lock
1171        		DesOperLockIn				IN		VARCHAR2 DEFAULT NULL,				-- Operazione per effettuare la quale si richiede il lock
1172        																				-- Deve essere un valore codificato nel dizionario nella sezione OPERAZIONI
1173        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da loccare
1174        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1175        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
1176        																				-- Se inizia con [APPROVAZIONE] il lock viene messo all'approvatore per un'approvazione della mail
1177        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1178        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1179        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1180        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1181        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1182        																				-- 1: ID_EMAIL
1183        																				-- 2: PROGR_MSG
1184        																				-- 3: Dati principali della mail (da mostrare come label)
1185        																				-- 4: Esito operazione: OK, KO
1186        																				-- 5: Messaggio di errore
1187        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1188        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1189        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1190        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1191        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1192        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1193        
1194        	----- serve a rimuovere un lock - posto da se stessi o anche da altri - su una o più mail (sia ricevute che inviate)
1195        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1196        	----- su ogni mail elaborata viene subito fatta la commit se richiesta
1197        	function UnlockEmail(
1198        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1199        																				-- (obblig). Codice identificativo del token di connessione
1200        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1201        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL e/o PROGR_MSG - delle e-mail da loccare
1202        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL, la 2 il campo PROGR_MSG (almeno uno dei 2 è obbligatorio)
1203        		MotiviIn					IN		VARCHAR2,							-- (facoltativo) Motivo/i dell'operazione (campo di testo libero)
1204        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1205        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1206        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1207        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1208        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1209        																				-- 1: ID_EMAIL
1210        																				-- 2: PROGR_MSG
1211        																				-- 3: Dati principali della mail (da mostrare come label)
1212        																				-- 4: Esito operazione: OK, KO
1213        																				-- 5: Messaggio di errore
1214        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1215        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1216        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1217        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1218        
1219        	/****** funzione per controllare se su una data e-mail è presente un lock di altri *****/
1220        	function CtrlLockEmail(
1221        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1222        																				-- (obblig). Codice identificativo del token di connessione
1223        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1224        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail da controllare
1225        		FlgPresenzaLockAltriOut		OUT		PLS_INTEGER,						-- (valori 1/0/NULL) Se 1 indica che è stato trovato un lock di altri, se 0 che tale lock non è stato trovato.
1226        		DatiLockAltriOut			OUT		VARCHAR2,							-- Contiene i dati del lock altrui se presente
1227        		FlgLockForzabileOut			OUT		PLS_INTEGER,						-- (valori 1/0/NULL) Se 1 indica che è il lock altrui trovato è forzabile dall'utente collegato, se 0 no
1228        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1229        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1230        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1231        		) return PLS_INTEGER;													-- Vale 1 se il controllo è stato possibile, altrimenti (caso di errore) vale 0
1232        
1233        
1234        	---------- funzione per fare collegamento manuale tra e-mail di notifica ricevuta
1235        	---------- (interoperabile, conferma lettura o delivery status notification)
1236        	---------- e invio e-mail di unità documentaria, o meglio, lo specifico destinatario di invio e-mail che l'ha inviata
1237        	function CollegaNotifica(
1238        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1239        																				-- (obblig). Codice identificativo del token di connessione
1240        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1241        		IdEmailRicevutaIn   		IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail di notifica (interoperabile, conferma lettura o delivery status notification) ricevuta
1242        		IdDestEmailInviataIn		IN		VARCHAR2,							-- (obblig.) PK del record della T_DESTINATARI_EMAIL_MGO cui associare la notifica
1243        		NoteIn						IN		VARCHAR2,							-- (facoltativo) Note a corredo dell'operazione (campo di testo libero)
1244        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1245        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1246        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1247        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1248        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1249        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1250        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1251        
1252        	-----------funzione per ottenere gli indirizzi e-mail contenuti in una mailing list (ricercati ricorsivamente se ho mailing list innestate)
1253        	function EsplodiIndirizziMailingList(
1254        		IdMailingListIn				In		VARCHAR2,							-- Id. in rubrica mail della mailing list
1255        		ListaIdMMExplodedIn			IN		VARCHAR2 DEFAULT NULL)				-- Lista di eventuali id. mailing list di appartenenza già esplose (separate da ;)
1256        		return DMVA_STRING;														-- lista con gli indirizzi mail della mailing list (ricercati ricorsivamente se ho mailing list innestate)
1257        
1258        	/**** funzione richimata per autocompletamento automatico o guidato dei destinatari di una e-mail ****/
1259        	function GetPropostaIndDest(
1260        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1261        																				-- (obblig). Codice identificativo del token di connessione
1262        		IdUserLavoroIn				IN 		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1263        		DestinatariIO				IN OUT		VARCHAR2,						-- Stringa con i destinatari a GUI (separati da, o ; o spazio)
1264        																				-- In output dà i destinatari validati/completati
1265        		RestringiPECPEOIn			IN		VARCHAR2 DEFAULT NULL,				-- Serve a restringere la proposta ai soli indirizzi:
1266        																				-- C = di posta certificata
1267        																				-- O = di posta ordinaria
1268        																				-- Ce = di posta certificata o NON marcati come di posta ordinaria
1269        																				-- Oe = di posta ordinaria o NON marcati come di posta certificata
1270        		PropostaXMLOut				OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene la proposta di destinatari (relativa solo all'ultimo indicato in DestinatariIO) per l'autocompletamento se non si può fare in automatico
1271        																				-- Ogni destinatario proposto corrisponde ad un tag riga con le colonne:
1272        																				-- 1: Descrizione voce della rubrica e-mail + eventuale indirizzo mail
1273        																				-- 2: Indirizzo mail
1274        																				-- 3: (valori C/O/NULL) Indicazione se indirizzo Certificato (=C) o Ordinario (=O)
1275        																				-- 4: Id. voce della rubrica e-mail corrisondente
1276        																				-- 5: Flag 1/0: se 1 è una mailing list, se 0 un singolo indirizzo
1277        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1278        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1279        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1280        		FlgDestInterniEsterniIn		IN		VARCHAR2 DEFAULT NULL,				-- (valori I/E) Indica se si deve filtrare per prendere solo indirizzi di soggetti Interni (=I) o Esterni (=E)
1281        		IdSoggRubricaIn				IN		DMT_RUBRICA_SOGGETTI.ID_SOGG_RUBRICA%type DEFAULT NULL
1282        																				-- Id. del soggetto della rubrica (DMT_RUBRICA_SOGGETTI, non la rubrica mail) cui devono essere relativi gli indirizzi da mostrare
1283        																				-- Questo filtro prende anche gli indirizzi dei soggetti subordinati (es. se è una PA gli indirizzi della AOO e UO della PA)
1284        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1285        
1286        	---------- funzione da chiamare prima del re-invio da GUI di e-mail con invio fallito
1287        	function ReinviaEmail(
1288        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1289        																				-- (obblig). Codice identificativo del token di connessione
1290        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1291        		IdEmailIn   				IN    	VARCHAR2,				 			-- (obblig.) Identificativo dell'e-mail
1292        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1293        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1294        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1295        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1296        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1297        		ErrMsgOut					OUT 	VARCHAR2,							-- Messaggio d'errore
1298        		FlgRilascioLockIn			IN		PLS_INTEGER DEFAULT 1,				-- Se 1 indica che alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail, ma solo se è stato messo in automatico all'inizio dell'operazione e NON era pre-esistente
1299        																				-- se 2 indica che comunque alla fine dell'operazione va rimosso il lock dell'utente collegato/di lavoro sulla/e e-mail
1300        																				-- se NULL o 0 il lock viene lasciato (da notare che se non era presente viene messo in automatico all'inizio dell'operazione)
1301        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1302        																				-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1303        		) return PLS_INTEGER;													-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1304        
1305        	/************ funzione per ricercare nella rubrica e-mail ************/
1306        	function TrovaInRubricaEmail(
1307        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1308        																					-- (obblig). Codice identificativo del token di connessione
1309        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1310        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd).
1311        																					-- Ogni filtro è un tag "Variabile" dell'XML
1312        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1313        																					-- I nomi dei filtri possibili sono:
1314        																					-- TipoVoce: valori S =Voce semplice, L =Lista di distribuzione
1315        																					--		   Serve a restringere alle voci in rubrica e-mail che sono singoli indirizzi (S) o liste di distribuzione (L)
1316        																					-- Account: parole contenute nell'indirizzo e-mail (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
1317        																					-- OperAccount(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1318        																					-- DesVoce: parole contenute nel nome della voce della rubrica (ricerca per parole fatta con indici context)
1319        																					-- OperDesVoce(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1320        																					-- TipoAccount: C = di Posta Certificata, O = di Posta Ordinaria, N = non indicato se PEC o PEO
1321        																					--				Può essere una combinazione dei valori sprecedenti separati da , o ;
1322        																					-- InseritaDal: estremo inferiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1323        																					-- InseritaAl: : estremo superiore della data di salvataggio espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1324        																					-- InseritaDaMe: se 1 si restringe la ricerca alle sole voci create dall'utente collegate
1325        																					-- IncludiAnnullati: se 1 la ricerca trova anche le voci logicamente annullate, altrimenti no
1326        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1327        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 4). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1328        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1329        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1330        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1331        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
1332        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1333        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1334        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
1335        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
1336        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1337        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1338        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1339        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1340        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1341        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1342        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema.
1343        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1344        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1345        																					-- La colonna 1 sarà presente comunque.
1346        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1347        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1348        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne:
1349        																					-- 1: ID (PK interna)
1350        																					-- 2: Descrizione / nome della voce
1351        																					-- 3: (valori 1/0) Se 0 indica che la voce è una lista di distribuzione, se 1 è una voce semplice
1352        																					-- 4: Account e-mail
1353        																					-- 5: Tipo di account: C = certificata, O = Ordinaria, N = non noto se certificata o ordinaria
1354        																					-- 6: flag 1/0: se 1 significa che è verificato che si tratti di indirizzo PEC, altrimenti NO
1355        																					-- 7: flag 1/0: se 1 dignifica che è un account dichiarato su IPA
1356        																					-- 8: Codici IPA (cod. Amministrazione e Cod. AOO)
1357        																					-- 9: Indica il tipo di soggetto a cui si riferisce la voce (valorizzato solo se non è una lista di distribuzione).
1358        																					--	  Valori possibili: UO (= Unità organizzativa), UT ( = Utente del modulo o di un sistema che lo utilizza), C (= Casella gestita nel modulo), AOOI =(AOO interna all'ente/i che utilizzano la voce di rubrica), AOOE (= AOO esterna all'ente/i che utilizzano la voce di rubrica), A (= altro soggetto esterno)
1359        																					-- 10: flag di voce valida (1) o logicamente annullata (0)
1360        																					-- 11: Data e ora di inserimento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1361        																					-- 12: Utente di inserimento (decodifica)
1362        																					-- 13: Data e ora di ultimo aggiornamento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1363        		ErrContextOut				OUT		VARCHAR2,								-- 14: Utente di ultimo aggiornamento (decodifica)
1364        																					-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1365        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1366        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
1367        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1368        
1369        	/************ funzione per ricercare le caselle configurate ************/
1370        	function TrovaCaselle(
1371        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1372        																					-- (obblig). Codice identificativo del token di connessione
1373        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1374        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd).
1375        																					-- Ogni filtro è un tag "Variabile" dell'XML
1376        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1377        																					-- I nomi dei filtri possibili sono:
1378        																					-- Account: parole contenute nell'indirizzo e-mail (ricerca per parole fatta con indici context; . e la @ si intendono come separatori di parole)
1379        																					-- OperAccount(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1380        																					-- DesOwner: parole contenute nel nome del soggetto produttore/AOO associato alla casella (ricerca per parole fatta con indici context)
1381        																					-- OperDesOwner(considerato solo se filtro precedente valorizzato) Indica l'operatore di ricerca sul filtro precedente (se diverso da contiene); valori: inizia, uguale, finisce, contiene, like
1382        																					-- TipoAccount: C = di Posta Certificata, O = di Posta Ordinaria
1383        																					-- GiorniUltimoCambioPwdDa: estremo inferiore dell'intervallo di ricerca sul n.ro di giorni da cui decorre l'ultimo cambio pwd
1384        																					-- GiorniUltimoCambioPwdA: estremo superiore dell'intervallo di ricerca sul n.ro di giorni da cui decorre l'ultimo cambio pwd
1385        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1386        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare solo per le colonne da 1 a 4). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1387        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1388        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1389        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1390        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
1391        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1392        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1393        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
1394        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
1395        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1396        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1397        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1398        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1399        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1400        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1401        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema.
1402        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1403        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1404        																					-- La colonna 1 sarà presente comunque.
1405        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1406        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1407        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne:
1408        																					-- 1: ID casella(PK interna, ID_ACCOUNT)
1409        																					-- 2: Indirizzo della casella
1410        																					-- 3: ID_SP_AOO dell'Ente/AOO cui è legata la casella
1411        																					-- 4: Denominazione dell'Ente/AOO cui è legata la casella
1412        																					-- 5: Tipo di account: C = certificata, O = Ordinaria, N = non noto se certificata o ordinaria
1413        																					-- 6: Username della casella
1414        																					-- 7: Password della casella (cifrata, se prevista la cifratura)
1415        																					-- 8: (valori 1/0) Se 1 indica che è una casella attiva in ricezione (almeno per un fruitore/utente) ed è ACTIVE lo scarico
1416        																					-- 9: (valori 1/0) Se 1 indica che è una casella attiva in invio (almeno per un fruitore/utente)
1417        																					-- 10: Denominazioni delle specifiche UO cui è associata la casella (se più di una separate da ;)
1418        																					-- 11: Data e ora di ultimo aggiornamento della password (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1419        																					-- 12: Utente di ultimo aggiornamento della password(decodifica)
1420        																					-- 13: N.ro di giorni da cui è in uso la password attuale
1421        																					-- 14: Id. del nodo su cui scarica la casella
1422        																					-- 17: Intervallo di scarico (in millisecondi)
1423        																					-- 18: N.ro max di e-mail scaricate insieme ad ogni connessione IMAP
1424        																					-- 19: N.ro massimo di tentativi di effettuare un'operazione del flusso di scarico
1425        																					-- 20: N.ro max di destinatari in una singola mail
1426        																					-- 21: (valori 1/0) Se 1 indica che è attiva la cancellazione delle e-mail dal file-system di scarico una volta che sono state archiviate in Auriga, altrimenti no (quindi ne restano 2 copie su file-system una volta archiviate)
1427        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1428        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1429        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore o warning (se)
1430        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1431        
1432        
1433        
1434        	/******* funzione per ottenere i parametri di una casella e della mailbox - ovvero processo di scarico - associata (se ce n'è una sola o una sola active) 	*****/
1435        	/******* che sono modificabili da GUI. Il valore del parametro della password arriva cifrato se è prevista la cifratura										*****/
1436        	function GetParametriCasella(
1437        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1438        																					-- (obblig). Codice identificativo del token di connessione
1439        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1440        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1441        		XMLParametriOut				OUT		NOCOPY CLOB,							-- Lista dei parametri modificabili da GUI (conforme a schema ListaStd.xsd)
1442        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1443        																					-- 1: CONFIG_KEY del parametro
1444        																					-- 2: Valore del parametro
1445        																					-- 3: Significato del parametro
1446        																					-- 4: Tipo di parametro; valori possibili:
1447        																					--	string (testo libero)
1448        																					-- 	int (n° intero)
1449        																					--	enum (lista di scelta)
1450        																					--	password (campo stringa con asterischi al posto dei caratteri)
1451        																					--  path (percorso di rete)
1452        																					-- 5: (valorizzato se tipo = enum) Valori possibili per il parametro separati da |*|
1453        																					-- 6: (valori 1/0) Se 1 indica che è obbligatorio valorizzare il parametro, se 0 no
1454        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1455        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1456        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1457        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1458        
1459        	/******* funzione per settare i parametri di una casella e della mailbox - ovvero processo di scarico - associata (se ce n'è una sola o una sola active) 	*****/
1460        	/******* Il valore del parametro della password va passato cifrato se è prevista la cifratura																*****/
1461        	function SetParametriCasella(
1462        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1463        																					-- (obblig). Codice identificativo del token di connessione
1464        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1465        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1466        		XMLParametriIn				IN		CLOB,									-- Lista dei parametri da aggiornare (conforme a schema ListaStd.xsd)
1467        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1468        																					-- 1: (obblig.)CONFIG_KEY del parametro
1469        																					-- 2: Valore del parametro
1470        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1471        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1472        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1473        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1474        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1475        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1476        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1477        
1478        
1479        	/******* funzione per ottenere i soggetti - AOO, UO, utenti - che hanno un qualche profilo vs una data casella 	*****/
1480        	function GetSoggConProfiliVsCasella(
1481        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1482        																					-- (obblig). Codice identificativo del token di connessione
1483        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1484        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1485        		IdFruitoreEnteAOOOut		OUT		VARCHAR2,								-- ID_FRUITORE_CASELLA dell'Ente o AOO cui è associata la casella
1486        		IdEnteAOOOut				OUT		PLS_INTEGER,							-- ID_SP_AOO dell'Ente o AOO cui è associata la casella
1487        		DesEnteAOOOut				OUT		VARCHAR2,								-- Denominazione dell'Ente o AOO cui è associata la casella
1488        		XMLFruitoriProfOut			OUT		NOCOPY CLOB,							-- Lista dei fruitori (ente, AOO, UO) che hanno un profilo vs la casella (conforme a schema ListaStd.xsd)
1489        																					-- Ogni fruitore è un tag Riga formato dalle colonne:
1490        																					-- 1: Id. del fruitore (ID_FRUITORE_CASELLA)
1491        																					-- 2: Tipo di fruitore: ENTE, AOO, UO
1492        																					-- 3: ID_SP_AOO se il fruitore è un ENTE o AOO e ID_UO se è un'unità organizzativa
1493        																					-- 4: (valori 1/0) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1494        																					-- 5: (valori 1/0 Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1495        																					-- 6: (valori 1/0) Flag di profilo "amministratore"
1496        																					-- 7: (valori 1/0) Flag di inclusione dei fruitori gerarchicamente subordinati
1497        																					-- 8: Codice del fruitore
1498        																					-- 9: Denominazione del fruitore
1499        		XMLUtentiProfOut			OUT		NOCOPY CLOB,							-- Lista dei utenti - necessariamente legati ai fruitori legati alla casella - che hanno un profilo specifico vs la casella (conforme a schema ListaStd.xsd)
1500        																					-- Ogni utente è un tag Riga formato dalle colonne:
1501        																					-- 1: Id. del utente in T_UTENTI_MOD_PEC (ID_FRUITORE_CASELLA)
1502        																					-- 2: Id. dell'utente in DMT_USERS
1503        																					-- 3: Username dell'utente
1504        																					-- 4: (valori 1/0) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1505        																					-- 5: (valori 1/0) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1506        																					-- 6: (valori 1/0) Flag di profilo "amministratore"
1507        																					-- 7: Cognome e nome
1508        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1509        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1510        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1511        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1512        
1513        	/******* funzione per definire/modificare AOO/UO/Utenti che hanno un qualche profilo vs una data casella	*****/
1514        	function SetSoggConProfiliVsCasella(
1515        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1516        																					-- (obblig). Codice identificativo del token di connessione
1517        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1518        		IdCasellaIn   				IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella
1519        		IdFruitoreEnteAOOIn			IN		VARCHAR2 DEFAULT NULL,					-- ID_FRUITORE_CASELLA dell'Ente o AOO cui è associata la casella
1520        		IdEnteAOOIn					IN		PLS_INTEGER DEFAULT NULL,				-- ID_SP_AOO dell'Ente o AOO cui è associata la casella
1521        		DesEnteAOOIn				IN		VARCHAR2 DEFAULT NULL,					-- Denominazione dell'Ente o AOO cui è associata la casella
1522        		XMLFruitoriProfIn			IN		CLOB,									-- Lista dei fruitori (ente, AOO, UO) che hanno un profilo vs la casella (conforme a schema ListaStd.xsd)
1523        																					-- Ogni fruitore è un tag Riga formato dalle colonne:
1524        																					-- 1: Id. del fruitore (ID_FRUITORE_CASELLA)
1525        																					-- 2: Tipo di fruitore: ENTE (Ente o AOO), UO
1526        																					-- 3: ID_SP_AOO se il fruitore è un ENTE o AOO e ID_UO se è un'unità organizzativa
1527        																					-- 4: (valori 1/0/NULL) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1528        																					-- 5: (valori 1/0/NULL) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1529        																					-- 6: (valori 1/0/NULL) Flag di profilo "amministratore"
1530        																					-- 7: (valori 1/0/NULL) Flag di inclusione dei fruitori gerarchicamente subordinati
1531        																					-- 8: Codice del fruitore
1532        																					-- 9: Denominazione del fruitore
1533        		XMLUtentiProfIn				IN		CLOB,									-- Lista dei utenti - necessariamente legati ai fruitori legati alla casella - che hanno un profilo specifico vs la casella (conforme a schema ListaStd.xsd)
1534        																					-- Ogni utente è un tag Riga formato dalle colonne:
1535        																					-- 1: Id. del utente in T_UTENTI_MOD_PEC (ID_FRUITORE_CASELLA)
1536        																					-- 2: Id. dell'utente in DMT_USERS
1537        																					-- 3: Username dell'utente
1538        																					-- 4: (valori 1/0/NULL) Flag di profilo "smistatore" (gestione di tutte le mail ricevute)
1539        																					-- 5: (valori 1/0/NULL) Flag di profilo "mittente" (= abilitato all'invio di e-mail dalla casella)
1540        																					-- 6: (valori 1/0/NULL) Flag di profilo "amministratore"
1541        																					-- 7: Cognome e nome
1542        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1543        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1544        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1545        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1546        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1547        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1548        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1549        
1550        	/*********** funzione per creare una casella e-mail come copia di un'altra *********************/
1551        	function CreaCasellaComeCopia(
1552        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1553        																					-- (obblig). Codice identificativo del token di connessione
1554        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1555        		IdCasellaDaCopiareIn   		IN    	VARCHAR2,				 				-- (obblig.) Identificativo della casella da cui copiare i dati
1556        		IdFruitoreEnteAOOIn			IN		VARCHAR2 DEFAULT NULL,					-- ID_FRUITORE_CASELLA dell'Ente o AOO cui associare la nuova casella
1557        		IdEnteAOOIn					IN		PLS_INTEGER DEFAULT NULL,				-- ID_SP_AOO dell'Ente o AOO cui associare la nuova casella
1558        		DesEnteAOOIn				IN		VARCHAR2 DEFAULT NULL,					-- Denominazione dell'Ente o AOO cui associare la nuova casella
1559        		AccountCasellaIn			IN		VARCHAR2,								-- (obblig.) Indirizzo della nuova casella
1560        		XMLParametriIn				IN		CLOB,									-- Lista dei parametri da aggiornare rispetto a quelli della casella copiata (conforme a schema ListaStd.xsd)
1561        																					-- Ogni parametro è un tag Riga formato dalle colonne:
1562        																					-- 1: (obblig.)CONFIG_KEY del parametro
1563        																					-- 2: Valore del parametro
1564        		FlgAttivaScaricoIn			IN		PLS_INTEGER DEFAULT 1,					-- (valori 1/0)Se 1 indica che deve essere attivato lo scarico dalla nuova casella se era già configurato sulla casella copiata, se 0 o NULL lo scarico viene settato "inattivo"
1565        		IdCasellaNewOut   			OUT    	VARCHAR2,				 				-- Identificativo della casella creata
1566        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1567        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1568        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1569        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1570        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1571        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1572        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1573        
1574        	/************ funzione per ricercare le richieste di invio e-mail in tabella T_RICH_EMAIL_TO_SEND ************/
1575        	function TrovaRichInvioEmail(
1576        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1577        																					-- (obblig). Codice identificativo del token di connessione
1578        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1579        		FiltriIO					IN OUT	NOCOPY CLOB,							-- XML contenente nomi e valori dei filtri di ricerca(conforme allo schema SezioneCache.xsd).
1580        																					-- Ogni filtro è un tag "Variabile" dell'XML
1581        																					-- I filtri che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1582        																					-- I nomi dei filtri possibili sono:
1583        																					-- CodApplRichiedenti: codice della/e applicazioni che hanno sottomesso la richiesta (se più di uno separati da ; o ,)
1584        																					-- IdProvRichiesta: id. della richiesta datole dal richiedente (ricerca case-insensitive in like senza forzare % finale)
1585        																					-- XMLRichiesta: parola/e o inizio di parole contenute nell'xml della richiesta (ricerca full-text)
1586        																					-- StatiRichesta: codice del/degli stati delle richieste da ricercare (se più di uno separati da ; o ,)
1587        																					-- Lista degli stati ammessi e relativa codifica (tra parentesi):
1588        																					-- da elaborare (TO_PROCESS)
1589        																					-- in elaborazione (PROCESSING)
1590        																					-- elaborata senza errori (COMPLETED)
1591        																					-- da non elaborare ancora (IN_WAIT)
1592        																					-- eliminata (DELETED)
1593        																					-- in errore ma da riprocessare (ERROR)
1594        																					-- in errore e non più da processare (LOCKED)
1595        																					-- StatiEmail: serve a restringere la ricerca alle richieste le cui e-mail hanno uno degli stati di invio e/o accettazione e/o consegna indicati. Valori possibili:
1596        																					--			I:OK 	inviata
1597        																					--			I:KO	invio fallito
1598        																					--			I:IP	invio in corso
1599        																					--			I:W		avvertimenti in invio
1600        																					--			A:OK	accettata
1601        																					--			A:KO	non accettata
1602        																					--			A:IP	accettazione in corso
1603        																					--			A:W		presunta mancata accettazione
1604        																					--			A:ND	accettazione non valorizzata
1605        																					--			C:OK	consegnata
1606        																					--			C:KO	consegna fallita
1607        																					--			C:IP	consegna in corso
1608        																					--			C:W		presunta mancata consegna
1609        																					--			C:ND	consegna non valorizzata
1610        																					-- Può essere una concatenazione dei valori precedenti separati da , o ;
1611        																					-- TsRichiestaDa: estremo inferiore della data di acquisizione della richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1612        																					-- TsRichiestaA: : estremo superiore della data di acquisizione della richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1613        																					-- TsInvioEmailDa: estremo inferiore della data di invio della mail richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1614        																					-- TsInvioEmailA: : estremo superiore della data di invio della mail richiesta espressa nel formato dato dal parametro di config. FMT_STD_TIMESTAMP
1615        		------------- inizio argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1616        		ColOrderByIO				IN OUT	VARCHAR2,								-- Indica il/i numeri della/e colonna dell'XML (CLOB ResultOut) di output per cui ordinare i record nell'XML stesso (si può ordinare per tutte le colonne tranne 4 e 9). Se l'ordinamento è per più colonne queste vanno separate con "," (es: 2; 2,3)
1617        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul tipo di ordinamento una qualche preimpostazione di sistema/utente ecc.
1618        																					-- se non valorizzato (neppure in output) la lista di record restituita non è ordinata
1619        		FlgDescOrderByIO  			IN OUT	VARCHAR2,								-- E' una stringa di 1 o 0/NULL, tanti quanti le colonne di ordinamento, separati da ",": 1 significa che l'ordinamento per la data colonna deve essere discendente anzichè ascendente (es: 1; 1,0; 1, )
1620        																					-- in output può essere diverso che in input solo se in input è NULL: in tal caso significa che esiste sul verso di ordinamento una qualche preimpostazione di sistema/utente ecc.
1621        		FlgSenzaPaginazioneIn 		IN 		PLS_INTEGER DEFAULT NULL,            	-- (valori 1/0/NULL) Se 1 l'estrazione non è paginata, altrimenti sì
1622        		NroPaginaIO      			IN OUT	PLS_INTEGER,                  			-- E' il numero della pagina da estrarre; se NULL e l'estrazione è paginata viene estratta la prima pagina
1623        		BachSizeIO					IN OUT	PLS_INTEGER,							-- Indica il massimo n.ro di record da estrarre se l'estrazione non è paginata (FlgSenzaPaginazioneIn=1)
1624        																					-- Indica la dimensione (n.ro di record) della pagina se l'estrazione è paginata (FlgSenzaPaginazioneIn 0 o NULL) e in tal caso se non è valorizzato la dimensione della pagina è quella settata per l'utente di lavoro o è pari al valore del parametro STD_PAGE_NUM_ROW del dominio di lavoro
1625        		OverFlowLimitIn				IN		PLS_INTEGER DEFAULT NULL,				-- E' il n.ro di record soddisfacenti la ricerca superato il quale la funzione deve restituire errore di overflow
1626        		FlgSenzaTotIn				IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che non è richiesto come output il totale dei record soddisfacenti la ricerca (se la ricerca è paginata per la prima pagina il totale viene calcolato comunque, per le successive no)
1627        		NroTotRecOut				OUT		PLS_INTEGER,							-- E' il n.ro di record complessivi trovati (valorizzato solo se FlgSenzaTotIn è 0 o NULL o se si estrae la prima pagina)
1628        		NroRecInPaginaOut 			OUT   	PLS_INTEGER,                     		-- E' il numero di record nella pagina (valorizzato solo se l'estrazione è paginata, ovvero se FlgSenzaPaginazioneIn 0 o NULL)
1629        		------------- fine argomenti standard di tutte le funzioni di ricerca che devono restituire una lista --------------
1630        		FlgBatchSearchIn			IN		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 significa che la stored è utilizzata da un processo batch, altrimenti da un processo online.
1631        																					-- Serve affinchè in caso l'input OverFlowLimitIn non sia valorizzato vengano applicati i limiti di overflow per processo batch o online che sono parametri di configurazione del sistema.
1632        		ColToReturnIn				IN		VARCHAR2 DEFAULT NULL,					-- Stringa con i n.ri delle colonne dell'XML di output ResultOut che si vuole siano presenti.
1633        																					-- Se la stringa è vuota saranno presenti tutte le colonne.
1634        																					-- La colonna 1 sarà presente comunque.
1635        																					-- I n.ri delle varie colonne vanno separati con , o ; e se si vuole indicare un intervallo di colonne gli estremi dell'intervallo vanno separati con - (es: "1-5;7;10" significa colonne da 1 a 5 più le colonne 7 e 10)
1636        		ResultOut					OUT		NOCOPY CLOB, 							-- Lista delle e-mail trovate (XML conforme a schema LISTA_STD.xsd)
1637        																					-- Ogni voce della rubrica trovata è un tag Riga che può contenere le seguenti colonne:
1638        																					-- 1: ID (PK interna)
1639        																					-- 2: Id. originale richiesta assegnatole dal richiedente
1640        																					-- 3: Codice applicazione richiedente
1641        																					-- 4: Descrizione applicazione richiedente
1642        																					-- 5: Tipo doc. da inviare con la mail (codice)
1643        																					-- 6: Decodifica del tipo doc. da inviare con la mail
1644        																					-- 7: XML richiesta
1645        																					-- 8: Stato della richiesta
1646        																					-- 9: Messaggio di errore ricevuto durante l'elaborazione della richiesta
1647        																					-- 10: Data e ora di sottomissione richiesta (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1648        																					-- 11: Data e ora invio o ultimo tentativo invio della e-mail (nel formato dato dal parametro di config. FMT_STD_TIMESTAMP)
1649        																					-- 12: Id. della mail associata (ID_EMAIL)
1650        																					-- 13: Stato di invio della mail
1651        																					-- 14: Stato di accettazione della mail
1652        																					-- 15: Stato di consegna della mail
1653        																					-- 16: Data e ora di ultimo aggiornamento (nel formato dato dal parametro di configurazione FMT_STD_TIMESTAMP)
1654        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1655        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1656        		ErrMsgOut					OUT 		VARCHAR2)							-- Messaggio d'errore
1657        		return PLS_INTEGER;															-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1658        
1659        	/**** funzione per creare/aggiornare una mail in bozza e per aggiornare gli item di lavorazione - note, tag, file - associati a qualsiasi mail *****/
1660        	function IUEmail(
1661        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1662        																					-- (obblig). Codice identificativo del token di connessione
1663        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1664        		DatiEmailIn					IN 		CLOB,									-- XML contenente nomi e valori dei dati della mail(conforme allo schema SezioneCache.xsd).
1665        																					-- Ogni tipo di dato è un tag "Variabile" dell'XML
1666        																					-- I tipi di dati che sono liste hanno nomi (tag Variabile/Nome) che iniziano con @.
1667        																					-- I tipi di dato possibili sono:
1668        																					-- Dimensione       Dimensione in bytes della mail
1669        																					-- URI              URI (con notazione di StorageUtil) a cui reperire l'eml (busta di trasporto intera in caso di e-mail ricevuta)
1670        																					-- FlgEmailFirmata	valori 1/0 Se 1 indica che la mail è firmata (l'intera busta SMIME)
1671        																					-- AccountMittente	Indirizzo mittente
1672        																					-- Subject			Subject/oggetto della mail
1673        																					-- Body				Corpo della mail (quello in formato text/plain)
1674        																					-- FlgRichConfermaLettura valori 1/0 Se 1 indica che è stata richiesta la conferma di lettura
1675        																					-- FlgAggSoloDestinatari Se 1 significa che la funzione deve SOLO aggiornare i destinatari
1676        																					-- @Destinatari		Lista dei destinatari principali della mail.
1677        																					--							E' una lista in cui ogni destinatario è una riga e ogni riga è formata dalle seguenti colonne:
1678        																					--							1: indirizzo del destinatario
1679        																					--							2: Tipo di destinatario: P = Principale, CC = In conoscenza, CCN = In conoscenza nascosta
1680        																					-- EmailPredecessore.TipoRelazione Indica il tipo di relazione con la mail predecessore: I = Inoltro, R = Risposta
1681        																					-- EmailPredecessore.IdEmail		ID_EMAIL della mail predecessore da cui quella corrente ha avuto luogo
1682        																					-- @IdEmailInoltrate	Lista con gli id. delle e-mail di cui la bozza costituisce un inoltro massivo. Ogni riga ha una sola colonna con l'id. email
1683        																					-- @Allegati			Allegati(file) della mail. Ogni allegato è una riga e contiene le seguenti colonne:
1684        																					--							1: Nome file
1685        																					--							2: Mimetype
1686        																					--							4: (valori 1/0) Se 1 indica se firmato digitalmente
1687        																					--							5: Dimensione in bytes
1688        																					--							6: Impronta
1689        																					--							7: Algoritmo calcolo impronta
1690        																					--							8: Encoding impronta (hex o base64)
1691        																					--							13:  (valori 1/0) Flag di firma valida
1692        																					-- @ItemLavorazione 	Lista degli item di lavorazione - commenti, tag, file - associati alla mail
1693        																					--						E' una lista in cui ogni item è una riga e ogni riga è formata dalle seguenti colonne:
1694        																					--							1: (obblig.) Tipo di item. Valori possibili: F = File, AT = Commento e/o tag
1695        																					--							2: Nro progressivo dell'item (da lasciare vuoto se è un nuovo item)
1696        																					--							3: Commento
1697        																					--							4: Tag
1698        																					--							5: URI del file
1699        																					--							6: Nome del file
1700        																					--							7: Dimensione del file (in bytes)
1701        																					--							8: Mimetype del file
1702        																					--							9: (valori 1/0) Se 1 indica se file firmato digitalmente
1703        																					--							10: Impronta del file
1704        																					--							11: Algoritmo di calcolo dell'impronta del file
1705        																					--							12: Encoding dell'impronta del file (hex o base64)
1706        																					--							18: (valori 1/0/NULL) Flag di item non modificabile/cancellabile perchè "locked" dall'utente di lavoro (viene considerato solo se è abilitato alla modifica dell'item)
1707        		IdEmailIO   				IN OUT  VARCHAR2,				 				-- Identificativo della mail (ID_EMAIL)
1708        																					-- Se in input è vuoto si intende che la mail è da creare in bozza, altrimenti indica la mail da aggiornare
1709        																					-- In output è sempre valorizzato
1710        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1711        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1712        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1713        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1714        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1715        		ErrMsgOut					OUT 	VARCHAR2,								-- Messaggio d'errore
1716        		IdUOLavoroIn				IN		DMT_STRUTTURA_ORG.ID_UO%type DEFAULT NULL
1717        																					-- Id. della UO - PK di DMT_STRUTTURA_ORG - per cui sta lavorando l'utente collegato o di lavoro (da specificare se è associato a più UO)
1718        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1719        
1720        	----- serve ad apporre tag ed eventuali note su una o più mail (sia ricevute che inviate)
1721        	----- in caso di errore su una singola mail l'elaborazione NON si interrompe e procede con la successiva.
1722        	----- su ogni mail elaborata viene subito fatta la commit se richiesta
1723        	function TagEmail(
1724        		CodIdConnectionTokenIn		IN		DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%type,
1725        																				-- (obblig). Codice identificativo del token di connessione
1726        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,-- Id. dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1727        		ListaIdEmailIn   			IN    	CLOB,				 				-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene gli identificativi - ID_EMAIL - delle e-mail da taggare
1728        																				-- Ogni e-mail è un tag Riga; colonna 1 contiene l'ID_EMAIL
1729        		XMLTagIn					IN 		CLOB,								-- (obblig.) Lista XML conforme a schema ListaSTD.xsd che contiene i tag da apporre e le eventuali note a corredo
1730        																				-- Ogni riga contiene 3 colonne: 1) tag da apporre, 2) note, 3) flag di modifica/cancellazione inibita (valori 1/0)
1731        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1732        																				-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1733        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,			-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1734        		EsitiOut					OUT		NOCOPY CLOB,						-- Lista XML conforme a schema ListaSTD.xsd che contiene gli esiti dell'operazione su ciascuna mail in input
1735        																				-- Ogni e-mail corrisponde ad un tag riga con le colonne:
1736        																				-- 1: ID_EMAIL
1737        																				-- 2: PROGR_MSG
1738        																				-- 3: Dati principali della mail (da mostrare come label)
1739        																				-- 4: Esito operazione: OK, KO
1740        																				-- 5: Messaggio di errore
1741        		ErrContextOut				OUT		VARCHAR2,							-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1742        		ErrCodeOut					OUT		PLS_INTEGER,						-- N.ro errore di uscita
1743        		ErrMsgOut					OUT 	VARCHAR2							-- Messaggio d'errore
1744        		) return PLS_INTEGER;													-- Vale 1 se non ci sono stati errori generali (vale a dire NON sulla singola e-mail), altrimenti 0
1745        
1746        	/**** funzione per collegare una mail ad una registrazione a protocollo generale o in altro registro 									*****/
1747        	/**** collega alla registrazione tutti gli allegati della mail a meno che non si specifichino le impronte di alcuni allegati specifici	*****/
1748        	function CollegaRegToEmail(
1749        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1750        																					-- (obblig). Codice identificativo del token di connessione
1751        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1752        		IdEmailIn  					IN		VARCHAR2,				 				-- (obblig.) Identificativo della mail (ID_EMAIL) da associare alla registrazione
1753        		IdUDIn						IN		INTEGER DEFAULT NULL,					-- Id. (ID_UD) assegnato alla registrazione da associare
1754        		CategoriaRegIn				IN		VARCHAR2 DEFAULT NULL,					-- Categoria di registrazione: PG = Protocollo Generale, R = Repertorio, PP = Protocollo particolare
1755        		SiglaRegistroIn				IN		VARCHAR2 DEFAULT NULL,					-- Sigla del registro (da valorizzare solo se la categoria è R o PP)
1756        		AnnoRegIn					IN		INTEGER DEFAULT NULL,					-- Anno di registrazione
1757        		NumeroRegIn					IN		INTEGER DEFAULT NULL,					-- N.ro di registrazione
1758        		ImpronteAllegatiIn			IN		CLOB DEFAULT NULL,						-- Lista XML di tipo ListaStd con una sola colonna contenente le impronte degli allegati messi nella registrazione
1759        																					-- Se nulla è specificato vengono associati alla registrazione tutti gli allegati della mail ovvero tutti quelli non già inseriti in altre registrazioni
1760        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1761        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1762        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1763        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1764        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1765        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1766        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1767        
1768        	---- funzione per spostare una mail in archivio storico (tabelle che iniziano con TH_) o viceversa ripristinarla dall'achivio storico in quello corrente
1769        	function SpostaMailVsDaStorico(
1770        		IdEmailIn					IN		VARCHAR2,								-- (obblig.) Id. della mail da spostare
1771        		TpOperazioneIn				IN		VARCHAR2 DEFAULT 'S',					-- (obblig.) Indica l'operazione richiesta. Valori:
1772        																					-- S = Spostamento in archivio storico
1773        																					-- R = ripristino in archivio corrente (per mail già spostata in storico)
1774        		FlgRollBckFullIn			IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se 1 in caso di errore viene fatta la rollback completa (non a savepoint), altrimenti la rollback delle sole modifiche effettuate nella stored
1775        																					-- ATTENZIONE: La rollback, di qualsiasi tipo, non riguarda la scrittura di eventuali log
1776        		FlgAutoCommitIn				IN 		PLS_INTEGER DEFAULT NULL,				-- (valori 1/0/NULL) Se vale 1, dopo la rollback e qualunque sia l'esito (positivo o meno), la funzione esegue una commit finale
1777        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1778        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1779        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1780        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1781        
1782        	----------funzione per ricavare info su mail e ricevute legate ad una certa mail o registrazione
1783        	----------usata da WS di RER
1784        	function GetRicevute(
1785        		CodIdConnectionTokenIn		IN	    DMT_CONNECTION_TOKEN.CI_CONNECTION_TOKEN%TYPE,
1786        																					-- (obblig). Codice identificativo del token di connessione
1787        		IdUserLavoroIn				IN		DMT_USERS.ID_USER%type DEFAULT NULL,	-- Id.(ID_USER della DMT_USERS) dell'utente a nome di cui si lavora. Se non valorizzato è l'utente connesso
1788        		IdEmailIn  					IN		VARCHAR2 DEFAULT NULL,			 		-- Identificativo della mail (ID_EMAIL) inviata di cui recuperare le ricevute
1789        		IdUDIn						IN		INTEGER DEFAULT NULL,					-- Id. (ID_UD) assegnato alla registrazione delle cui e-mail di trasmissione recuperare le ricevute
1790        		CategoriaRegIn				IN		VARCHAR2 DEFAULT NULL,					-- Categoria di registrazione della registrazione delle cui e-mail di trasmissione recuperare le ricevute: PG = Protocollo Generale, R = Repertorio, PP = Protocollo particolare
1791        		SiglaRegistroIn				IN		VARCHAR2 DEFAULT NULL,					-- Sigla del registro (da valorizzare solo se la categoria è R o PP) della registrazione delle cui e-mail di trasmissione recuperare le ricevute
1792        		AnnoRegIn					IN		INTEGER DEFAULT NULL,					-- Anno della registrazione delle cui e-mail di trasmissione recuperare le ricevute
1793        		NumeroRegIn					IN		INTEGER DEFAULT NULL,					-- N.ro della registrazione delle cui e-mail di trasmissione recuperare le ricevute
1794        		IdSoggRubricaIn				IN		INTEGER DEFAULT NULL,					-- Id. del soggetto di rubrica al cui indirizzo mail sono state inviate la/le mail di cui recuperare le ricevute
1795        		IndirizzoEmailDestIn		IN		VARCHAR2 DEFAULT NULL,					-- Indirizzo mail destinatario di cui recuperare le ricevute
1796        		ListaXmlOut					OUT		NOCOPY CLOB,							-- Lista con i dati delle mail inviate e relative ricevute
1797        																					-- Ogni tag Riga contiene le seguenti colonne:
1798        																					-- 1: Flag I/R che indica che rappresenta il record: I = email inviata, R = ricevuta
1799        																					-- 2: Id. email inviata
1800        																					-- 3: Indirizzo mittente mail inviata
1801        																					-- 4: Data e ora invio e-mail inviata (nel formato FMT_STD_TIMESTAMP)
1802        																					-- 5: URI email inviata (nella notazione StorageUtil)
1803        																					-- 6: Id. email della ricevuta
1804        																					-- 7: Tipo di ricevuta; valori possobili:
1805        																					--		PEC_RIC_ACC = ricevuta PEC di accettazione
1806        																					--		PEC_RIC_NO_ACC = ricevuta PEC di mancata accettazione
1807        																					--		PEC_RIC_PREAS_C = ricevuta PEC di presa in carico da parte del provider ricevente
1808        																					--		PEC_RIC_CONS = ricevuta  PEC di avvenuta consegna
1809        																					--		PEC_RIC_PREAVV_NO_CONS = preavviso di mancata consegna
1810        																					--		PEC_RIC_NO_CONS = ricevuta PEC di mancata consegna
1811        																					--		DELIVERY_STATUS_NOT = notifiche di trasporto dei mail server/provider
1812        																					--		PEO_RIC_CONF = Conferma di lettura (posta ordinaria)
1813        																					-- 8: Data e ora della ricevuta (nel formato FMT_STD_TIMESTAMP)
1814        																					-- 9: Indirizzo mittente della ricevuta
1815        																					-- 10: URI della ricevuta (nella notazione StorageUtil)
1816        		ErrContextOut				OUT		VARCHAR2,								-- Contesto (ovvero package e/o funzione/procedura) in cui si è verificato l'errore
1817        		ErrCodeOut					OUT		PLS_INTEGER,							-- N.ro errore di uscita
1818        		ErrMsgOut					OUT 	VARCHAR2								-- Messaggio d'errore
1819        		) return PLS_INTEGER;														-- Vale 1 se tutto è andato a buon fine, altrimenti 0
1820        
1821        END DMPK_INT_MGO_EMAIL;