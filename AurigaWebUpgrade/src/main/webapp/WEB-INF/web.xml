<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

	<filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>it.eng.utility.filter.xss.XSSFilter</filter-class>
		<init-param>
			<param-name>filterEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>httpHeaderSecurityFilter</filter-name>
		<filter-class>it.eng.utility.filter.httpheader.HttpHeaderAurigaSecurityFilter</filter-class>
		<init-param>
			<param-name>filterEnabled</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- HTTP Strict-Transport-Security Force communication using HTTPS instead 
			of HTTP. All present and future subdomains will be HTTPS for a max-age of 
			1 year. -->
		<init-param>
			<param-name>hstsEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>hstsMaxAgeSeconds</param-name>
			<param-value>31536000</param-value>
		</init-param>
		<init-param>
			<param-name>hstsIncludeSubDomains</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- X-Content-Type-Options Disables MIME sniffing and forces browser to 
			use the type given in Content-Type. -->
		<init-param>
			<param-name>blockContentTypeSniffingEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- X-XSS-Protection Enables cross-site scripting (XSS) filtering (usually 
			default in browsers). The browser will prevent rendering of the page if a 
			XSS attack is detected. -->
		<init-param>
			<param-name>xssProtectionEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<!-- X-Frame-Options Indicates whether or not a browser should be allowed 
			to render a page in a <frame>, <iframe> or <object> -->
		<init-param>
			<param-name>antiClickJackingEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>antiClickJackingOption</param-name>
			<param-value>SAMEORIGIN</param-value>
		</init-param>
		<!-- Content-Security-Policy -->
		<init-param>
			<param-name>cspEnabled</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- X-Permitted-Cross-Domain-Policies -->
		<init-param>
			<param-name>permittedCrossDomainPoliciesEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>permittedCrossDomainPoliciesValue</param-name>
			<param-value>master-only</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>httpHeaderSecurityFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CSRFValidationFilter</filter-name>
		<filter-class>it.eng.utility.filter.csrf.CSRFValidationFilter</filter-class>
		<init-param>
			<param-name>filterEnabled</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- <init-param> <param-name>targetOrigin</param-name> <param-value>http://localhost:8080</param-value> 
			</init-param> -->
	</filter>

	<filter-mapping>
		<filter-name>CSRFValidationFilter</filter-name>
		<servlet-name>smartgwtdispatcher</servlet-name>
	</filter-mapping>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>EncryptionDisabledFilter</filter-name>
		<filter-class>it.eng.utility.filter.portlet.EncryptionDisabledFilter</filter-class>
		<init-param>
			<param-name>filterEnabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>targets</param-name>
			<param-value>portlet.jsp</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>EncryptionDisabledFilter</filter-name>
		<servlet-name>smartgwtdispatcher</servlet-name>
	</filter-mapping>

	<filter>
		<filter-name>LoginFilter</filter-name>
		<filter-class>it.eng.utility.authentication.module.filter.LoginFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>LoginFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>GWTCacheControlFilter</filter-name>
		<filter-class>org.realityforge.gwt.cache_filter.GWTCacheControlFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>GWTCacheControlFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>GWTGzipFilter</filter-name>
		<filter-class>org.realityforge.gwt.cache_filter.GWTGzipFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>GWTGzipFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/config.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>it.eng.utility.ui.listener.SessionListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>smartgwtdispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>springdispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>servletinitialize</servlet-name>
		<servlet-class>it.eng.auriga.ui.servlet.AurigaServletInitialize</servlet-class>
		<init-param>
			<param-name>springcontextxml</param-name>
			<param-value>config</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>smartgwtdispatcher</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>springdispatcher</servlet-name>
		<url-pattern>/springdispatcher/*</url-pattern>
	</servlet-mapping>

	<!-- servlet Hybrid -->

	<servlet>
		<servlet-name>LoadHybridModuleServlet</servlet-name>
		<servlet-class>it.eng.auriga.ui.module.layout.server.LoadHybridModuleServlet</servlet-class>
		<load-on-startup>0</load-on-startup>
	</servlet>

	<servlet>
		<servlet-name>HybridServlet</servlet-name>
		<servlet-class>it.eng.areas.hybrid.deploy.servlet.HybridServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>HybridServlet</servlet-name>
		<url-pattern>/hybrid/*</url-pattern>
	</servlet-mapping>

	<!-- fine servlet Hybrid -->
	
	<!-- servlet FileDownload -->
	<!--
	<servlet>
		<servlet-name>FileDownload</servlet-name>
		<init-param>
			<param-name>expires</param-name>
			<param-value>text/javascript:3600,image/gif:86400</param-value>
		</init-param>
		<servlet-class>com.isomorphic.servlet.FileDownload</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FileDownload</servlet-name>
		<url-pattern>/isomorphic/system/modules/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>FileDownload</servlet-name>
		<url-pattern>/isomorphic/skins/*</url-pattern>
	</servlet-mapping>
	-->
	<!-- fine servlet FileDownload -->
	
	<!-- servlet agibilità -->
	
	<servlet>
		<servlet-name>AgibilitaDownload</servlet-name>
		<servlet-class>it.eng.servlet.agibilita.DownloadFileAgibilitaServlet</servlet-class>
        <init-param>
            <param-name>zipFileName</param-name>
            <param-value>certificati.zip</param-value>
        </init-param>
		<load-on-startup>2</load-on-startup>
	</servlet>
	
	<servlet-mapping>
        <servlet-name>AgibilitaDownload</servlet-name>
        <url-pattern>/agibilita/download</url-pattern>
    </servlet-mapping>
	
	<!-- fine servlet agibilità -->
	
	<!-- Default page to serve -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- INIZIO - DA METTERE CON JAAS -->
	<security-constraint>
		<display-name>Security Constraint</display-name>
		<web-resource-collection>
			<web-resource-name>Protected Area</web-resource-name>
			<url-pattern>/rest/*</url-pattern>
			<url-pattern>/download</url-pattern>
			<url-pattern>/upload</url-pattern>
			<http-method>GET</http-method>
			<http-method>POST</http-method>
		</web-resource-collection>
		<auth-constraint>
			<role-name>*</role-name>
		</auth-constraint>
	</security-constraint>

	<login-config>
		<auth-method>FORM</auth-method>
		<realm-name>Example Form-Based Authentication Area</realm-name>
		<form-login-config>
			<form-login-page>/login.jsp</form-login-page>
			<form-error-page>/login.jsp</form-error-page>
		</form-login-config>
	</login-config>
	<!-- FINE - DA METTERE CON JAAS -->

	<security-role>
		<role-name>*</role-name>
	</security-role>

	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/html/error/HTTP403.html</location>
	</error-page>
	
	<error-page>
	    <exception-type>it.eng.servlet.agibilita.DownloadFileAgibilitaException</exception-type>
        <location>/WEB-INF/html/error/downloadAgibilitaError.html</location>
    </error-page>
    
	<error-page>
	    <exception-type>it.eng.servlet.agibilita.AccessoNegatoAgibilitaException</exception-type>
        <location>/WEB-INF/html/error/accessoNegatoError.html</location>
    </error-page>

</web-app>
